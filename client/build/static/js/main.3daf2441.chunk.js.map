{"version":3,"sources":["assets/person-icon-1.png","assets/quizapp_logo.png","components/QuizSelection.js","pages/Home.js","components/AuthForm.js","pages/Signup.js","pages/Login.js","components/HomeNavbar.js","components/QuizNavbar.js","components/Footer.js","components/Layout.js","components/QuestionCard.js","components/QuizResult.js","components/QuizExplanations.js","pages/TakeQuiz.js","pages/Profile.js","pages/QuizGenerator.js","pages/MyQuizzes.js","pages/ExplanationPage.js","pages/AttemptPage.js","components/RetakeQuiz.js","components/PrivateRoute.js","App.js","components/reportWebVitals.js","index.js"],"names":["module","exports","QuizSelection","_ref","title","description","comment1","comment2","comment3","type","listItemStyle","marginBottom","paddingLeft","position","aiButtonStyle","backgroundColor","color","border","borderRadius","padding","fontSize","fontWeight","cursor","width","textDecoration","display","textAlign","transition","triviaButtonStyle","linkProps","to","style","text","React","createElement","maxWidth","minWidth","boxShadow","onMouseOver","e","currentTarget","transform","onMouseOut","listStyle","left","Link","Home","isLogin","localStorage","getItem","paragraphStyle","className","flexDirection","alignItems","justifyContent","paddingTop","opacity","flexWrap","gap","marginTop","Fragment","AuthForm","onSubmit","email","setEmail","password","setPassword","setUserName","userName","showGoogleButton","onGoogleSuccess","onGoogleError","showPassword","setShowPassword","useState","minHeight","textShadow","letterSpacing","htmlFor","id","value","onChange","target","required","placeholder","WebkitBoxShadow","WebkitTextFillColor","onClick","prev","top","right","tabIndex","Eye","size","EyeOff","borderTop","margin","GoogleLogin","onSuccess","onError","Signup","isLoading","setIsLoading","navigate","useNavigate","removeItem","onAuthSuccess","data","userID","isGoogleAuth","arguments","length","undefined","console","log","finalUserName","token","setItem","_decoded$email","decoded","jwtDecode","_id","username","split","err","warn","error","alert","String","async","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","ok","errorMessage","message","status","credentialResponse","credential","handleGoogleError","Login","then","res","catch","name","HomeNavbar","location","useLocation","isLoggedIn","setIsLoggedIn","useEffect","loggedIn","isLoginPage","pathname","isSignupPage","src","logo","alt","handleLogout","clear","icon","QuizNavbar","Footer","Layout","Navbar","footer","interval","setInterval","clearInterval","startsWith","Outlet","QuestionCard","question","current","total","selectedAnswer","onSelect","onNext","options","map","option","index","key","checked","disabled","QuizResult","topic","score","quizID","attempts","onTryAgain","difficulty","onShowExplanations","quizData","userAnswers","quizType","Math","round","QuizExplanations","onRetake","onBackToResults","readOnly","optIndex","correctAnswer","explanation","TakeQuiz","setQuizData","quizTopic","setQuizTopic","quizDifficulty","setQuizDifficulty","setQuizID","currentQuestion","setCurrentQuestion","setSelectedAnswer","setScore","setUserAnswers","viewMode","setViewMode","totalAttempts","setTotalAttempts","setQuizType","hasSaved","setHasSaved","_location$state","state","questions","Array","fill","explanationID","axios","post","explanationData","resultPayload","saveEverything","handleNextQuestion","newUserAnswers","handleContinueTrying","handleShowExplanations","handleRetakeQuiz","handleBackToResults","Profile","user","setUser","joined","quizzesCompleted","averageScore","questionsAnswered","Date","toLocaleString","month","year","fetchUserInfo","totalScore","totalPossible","totalQuestionsAnswered","forEach","attempt","totalquestions","fetchStats","height","flex","objectFit","marginRight","data-bs-toggle","aria-expanded","borderColor","aria-labelledby","onMouseEnter","onMouseLeave","role","aria-label","QuizGenerator","useParams","setTopic","numberOfQuestions","setNumberOfQuestions","setDifficulty","setError","categories","setCategories","questionID","saveQuizAndNavigate","get","trivia_categories","fetchCategories","success","category","request","Number","transformOrigin","MyQuizzes","quizzes","setQuizzes","loading","setLoading","getDifficultyBadge","toLowerCase","fetchQuizzes","quiz","quizid","Dropdown","stopPropagation","Toggle","as","children","Menu","variant","Item","onViewExplanations","explanationid","onViewAttempts","onRetakeQuiz","Divider","window","confirm","delete","reload","handleDelete","createdat","toLocaleDateString","ExplanationPage","fetchExplanationData","handleRetake","AttemptPage","setAttempts","fetchAttempts","classList","add","remove","flexGrow","attemptID","filter","a","attemptid","RetakeQuiz","content","fetchQuestions","PrivateRoute","Navigate","replace","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","GoogleOAuthProvider","clientId","process","StrictMode"],"mappings":"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","file":"static/js/main.3daf2441.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person-icon-1.f540a12d.png\";","module.exports = __webpack_public_path__ + \"static/media/quizapp_logo.ab8c8e41.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst QuizSelection = ({ \n    title, \n    description, \n    comment1, \n    comment2, \n    comment3, \n    type \n}) => {\n\n    const cardStyle = {\n        backgroundColor: '#2a2a2a',\n        borderRadius: '0.5rem',\n        padding: '1.5rem',\n        maxWidth: '400px',\n        minWidth: '300px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n        transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n    };\n\n    const cardTitleStyle = {\n        fontSize: '1.5rem',\n        marginBottom: '1rem',\n        color: '#ffffff',\n    };\n\n    const cardTextStyle = {\n        color: 'rgba(255, 255, 255, 0.75)',\n        marginBottom: '1.5rem',\n    };\n\n    const listStyle = {\n        listStyle: 'none',\n        padding: 0,\n        marginBottom: '1.5rem',\n        color: '#ffffff',\n    };\n\n    const listItemStyle = {\n        marginBottom: '0.5rem',\n        paddingLeft: '1.5rem',\n        position: 'relative',\n    };\n\n    const aiButtonStyle = {\n        backgroundColor: '#007bff',\n        color: '#ffffff',\n        border: 'none',\n        borderRadius: '0.25rem',\n        padding: '0.75rem 1rem',\n        fontSize: '1rem',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        width: '100%',\n        textDecoration: 'none',\n        display: 'block',\n        textAlign: 'center',\n        transition: 'transform 0.3s ease',\n    };\n\n    const triviaButtonStyle = {\n        ...aiButtonStyle,\n        backgroundColor: '#28a745',\n    };\n\n    // Decide Link based on type\n    const linkProps = type === 'ai'\n        ? { to: '/quiz-generator/ai', style: aiButtonStyle, text: 'Use AI Generator' }\n        : { to: '/quiz-generator/trivia', style: triviaButtonStyle, text: 'Use Trivia Database' };\n\n    return (\n        <div style={cardStyle}\n            onMouseOver={(e) => {\n                e.currentTarget.style.transform = 'translateY(-10px)';\n                e.currentTarget.style.boxShadow = '0 10px 20px rgba(0, 0, 0, 0.2)';\n            }}\n            onMouseOut={(e) => {\n                e.currentTarget.style.transform = 'translateY(0)';\n                e.currentTarget.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\n            }}>\n            <h2 style={cardTitleStyle}>{title}</h2>\n            <p style={cardTextStyle}>{description}</p>\n            <ul style={listStyle}>\n                <li style={listItemStyle}>\n                    <span style={{ position: 'absolute', left: 0 }}>✓</span> {comment1}</li>\n                <li style={listItemStyle}>\n                    <span style={{ position: 'absolute', left: 0 }}>✓</span> {comment2}</li>\n                <li style={listItemStyle}>\n                    <span style={{ position: 'absolute', left: 0 }}>✓</span> {comment3}</li>\n            </ul>\n\n            <Link\n                to={linkProps.to}\n                style={linkProps.style}\n                onMouseOver={(e) => e.currentTarget.style.transform = 'scale(1.05)'}\n                onMouseOut={(e) => e.currentTarget.style.transform = 'scale(1)'}\n            >\n                {linkProps.text}\n            </Link>\n        </div>\n    );\n};\n\nexport default QuizSelection;\n","import React from \"react\";\nimport QuizSelection from \"../components/QuizSelection\";\n\nconst Home = () => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  \n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: '6rem',\n  };\n  \n  const headingStyle = {\n    fontSize: '3rem',\n    marginBottom: '10px',\n    color: '#e0ffff',\n    textAlign: 'center',\n  };\n  \n  const paragraphStyle = {\n    fontSize: '1rem',\n    marginBottom: '20px',\n    color: '#f0f0f0',\n    textAlign: 'center',\n  };\n  const cardsContainerStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: '2rem',\n    marginTop: '2rem',\n    width: '100%',\n    maxWidth: '1200px',\n  };\n    \n  \n  return (\n    // Removed the \"row\" class that was forcing column layout\n    <div className=\"container-fluid justify-content-center\" style={containerStyle}>\n        <h1 style={headingStyle}>Choose Your Quiz Experience</h1>\n        <p style={paragraphStyle}>\n            Select from our AI-powered quizzes or explore our trivia database\n        </p>\n        \n        {!isLogin && (\n            <p style={{ ...paragraphStyle, fontSize: \"0.85rem\", opacity: 0.8 }}>\n            Sign up or Login to save your quizzes, track progress, and more!\n            </p>\n        )}\n        \n        {/* Cards wrapper - will display children in a row */}\n        <div style={cardsContainerStyle}>\n            <QuizSelection\n            title=\"AI-Generated Quiz\"\n            description=\"Generate unique quiz questions on any topic using Claude 3.5 Sonnet AI.\n                Perfect for custom topics or specialized knowledge areas.\"\n            comment1=\"Any topic you can imagine\"\n            comment2=\"Custom difficulty levels\"\n            comment3=\"Unique questions every time\"\n            type=\"ai\"\n            />\n            \n            <QuizSelection\n            title=\"Trivia Database\"\n            description=\"Use our trivia database with thousands of pre-made questions across\n                various categories and difficulty levels.\"\n            comment1=\"Multiple categories\"\n            comment2=\"Three difficulty levels\"\n            comment3=\"Multiple choice questions\"\n            type=\"trivia\"\n            />\n        </div>\n        \n        {isLogin && (\n            <>\n            {/* Future User Features */}\n            </>\n        )}\n    </div>\n  );\n};\n\nexport default Home;","import React, { useState } from \"react\";\nimport \"../styles/AuthForm.css\"; \nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { Eye, EyeOff } from \"lucide-react\";\n\nconst AuthForm = ({ \n    onSubmit, isLogin, \n    email, setEmail, \n    password, setPassword, \n    setUserName, userName, \n    showGoogleButton, \n    onGoogleSuccess, \n    onGoogleError \n}) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n      <div\n        className=\"container text-white p-4 rounded-4\"\n        style={{ \n          backgroundColor: \"#1a1a1a\",\n          maxWidth: \"500px\",\n          minHeight: \"50vh\",\n          marginTop: \"4rem\",\n          marginBottom: \"3rem\"\n        }}\n      >\n        <div className=\"row justify-content-center\" style={{ marginBottom: '-40px'}}>\n          <div className=\"col-12\">\n            {/* Title + Subtitle like QuizGenerator */}\n            <div className=\"text-center mb-4\">\n              <h2 style={{\n                color: \"#4da6ff\",\n                fontWeight: \"600\",\n                textShadow: \"0px 0px 10px rgba(77, 166, 255, 0.3)\"\n              }}>\n                {isLogin ? \"Welcome Back!\" : \"Create Your Account\"}\n              </h2>\n              <p style={{\n                color: \"#cccccc\",\n                fontSize: \"1.1rem\",\n                letterSpacing: \"0.5px\"\n              }}>\n                {isLogin ? \"Login to continue your journey.\" : \"Sign up to get started with quizzes.\"}\n              </p>\n            </div>\n\n            <div className=\"form-container bg-dark mt-4\">\n              <form onSubmit={onSubmit} className=\"p-3 rounded-lg m-4 shadow-md\">\n                {/* Username for signup only */}\n                {!isLogin && (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"userName\">User Name:</label>\n                    <input\n                      type=\"text\"\n                      id=\"userName\"\n                      value={userName}\n                      onChange={(e) => setUserName(e.target.value)}\n                      required\n                      placeholder=\"e.g., quizmaster123\"\n                      className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                      style={{\n                        boxShadow: 'none',\n                        WebkitBoxShadow: '0 0 0 1000px black inset',\n                        WebkitTextFillColor: 'white',\n                      }}\n                    />\n                  </div>\n                )}\n\n                {/* Email */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email:</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    placeholder=\"you@example.com\"\n                    className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                    style={{\n                      boxShadow: 'none',\n                      WebkitBoxShadow: '0 0 0 1000px black inset',\n                      WebkitTextFillColor: 'white',\n                    }}\n                  />\n                </div>\n\n                {/* Password */}\n                <div className=\"form-group position-relative\">\n                  <label htmlFor=\"password\">Password:</label>\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    placeholder=\"Enter your password\"\n                    className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                    style={{\n                      boxShadow: 'none',\n                      WebkitBoxShadow: '0 0 0 1000px black inset',\n                      WebkitTextFillColor: 'white',\n                    }}\n                  />\n                  {/* Toggle password visibility */}\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-black position-absolute\"\n                    onClick={() => setShowPassword(prev => !prev)}\n                    style={{ top: '30px', right: '5px', border: 'none' }}\n                    tabIndex={-1}\n                  >\n                    {showPassword ? <Eye color=\"white\" size={16} /> : <EyeOff color=\"white\" size={16} />}\n                  </button>\n                </div>\n\n                {/* Submit */}\n                <button type=\"submit\" className={`btn btn-signup mt-2 ${isLogin ? \"btn-primary\" : \"btn-primary\"} btn-block`}>\n                    {isLogin ? \"Login\" : \"Sign Up\"}\n                </button>\n              </form>\n\n              {/* Divider */}\n              <div className=\"d-flex align-items-center justify-content-center\" style={{ marginTop: '-30px', marginBottom: '-15px'}}>\n                <hr style={{ width: '120px', borderTop: '1px solid #ccc', margin: 0 }} />\n                <span className=\"px-2 text-light\">or</span>\n                <hr style={{ width: '120px', borderTop: '1px solid #ccc', margin: 0 }} />\n              </div>\n\n              {/* Google login */}\n              {showGoogleButton && (\n                <div className=\"google-login-wrapper my-3 text-center\">\n                  <GoogleLogin\n                    onSuccess={onGoogleSuccess}\n                    onError={onGoogleError}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default AuthForm;\n","// Signup.js\nimport React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst Signup = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  localStorage.removeItem(\"isLogin\");\n  localStorage.removeItem(\"userName\");\n  localStorage.removeItem(\"userID\");\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"supabase_access_token\");\n\n  // Helper function to handle successful authentication (both regular and Google)\n  const onAuthSuccess = (data, isGoogleAuth = false) => {\n    console.log(\"Auth success data:\", data);\n\n    let userID;\n    let finalUserName = data.userName;\n    console.log(\"I'm here at line 26 in Signup.js\");\n\n    if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n\n        try {\n        const decoded = jwtDecode(data.token);\n        console.log(\"Decoded JWT:\", decoded);\n        \n        // Extract from decoded token\n        userID = decoded.userID || decoded.id || decoded._id || decoded.email || decoded.username;\n        finalUserName = finalUserName || decoded.username || decoded.email?.split('@')[0] || \"User\";\n        } catch (err) {\n        console.warn(\"Could not decode JWT:\", err);\n        }\n    }\n\n    if (!userID) {\n        console.error(\"Auth succeeded but missing userID (even after decoding token):\", data);\n        alert(\"Authentication succeeded but user information is incomplete. Please try again.\");\n        return;\n    }\n\n    localStorage.setItem(\"isLogin\", \"true\");\n    localStorage.setItem(\"userName\", finalUserName);\n    localStorage.setItem(\"userID\", String(userID));\n\n    console.log(`${isGoogleAuth ? 'Google signup' : 'Signup'} successful! Welcome ${finalUserName}`);\n    navigate(\"/\");\n};\n\n\n  const handleSignup = async (event) => {\n    event.preventDefault();\n    \n    if (!userName || !email || !password) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/signup\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ userName, email, password }),\n      });\n\n      const data = await response.json();\n      console.log(\"Signup response:\", data);\n\n      if (response.ok) {\n        onAuthSuccess(data, false);\n      } else {\n        const errorMessage = data.message || data.error || `Signup failed (${response.status})`;\n        alert(errorMessage);\n      }\n    } catch (err) {\n      console.error(\"Signup error:\", err);\n      alert(\"Network error. Please check your connection and try again.\");\n    } finally {\n      setIsLoading(false);\n      // Reset form fields\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  // Handle Google OAuth signup\n  const handleGoogleSuccess = async (credentialResponse) => {\n    const token = credentialResponse?.credential;\n    if (!token) {\n      alert(\"Missing Google credential\");\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n        const response = await fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/google\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ credential: token }),\n    });\n\n      const data = await response.json();\n      console.log(\"Google signup response:\", data);\n\n      if (response.ok) {\n        onAuthSuccess(data, true);\n      } else {\n        const errorMessage = data.error || data.message || `Google signup failed (${response.status})`;\n        alert(errorMessage);\n      }\n    } catch (err) {\n      console.error(\"Google signup error:\", err);\n      alert(\"Google signup failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleError = () => {\n    console.log(\"Google signup failed\");\n    alert(\"Google signup failed. Please try again.\");\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center\">\n      <AuthForm\n        onSubmit={handleSignup}\n        isLogin={false}\n        userName={userName}\n        setUserName={setUserName}\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        showGoogleButton={true}\n        onGoogleSuccess={handleGoogleSuccess}\n        onGoogleError={handleGoogleError}\n        isLoading={isLoading}\n      />\n    </div>\n  );\n};\n\nexport default Signup;","import React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n  \n    const navigate = useNavigate();\n\n\n    const handleLogin = async (event) => {\n        event.preventDefault(); // Prevent page refresh\n\n        // Perform local authentication logic\n        try {\n            const response = await fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/login\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ email, password }),\n            });\n    \n            const data = await response.json();\n            console.log(\"Raw response data:\", data);\n\n            if (response.ok) {\n                localStorage.setItem(\"isLogin\", \"true\");\n                localStorage.setItem(\"userName\", data.userName);\n                localStorage.setItem(\"userID\", String(data.userID));\n                navigate(\"/\");\n            } else {\n                alert(data.message || \"Signup failed\");\n            }\n        } catch (err) {\n            console.error(\"Signup error:\", err);\n            alert(\"Signup failed. Try again later.\");\n        }\n\n        // Reset form fields after submission\n        setEmail(\"\");\n        setPassword(\"\");\n    };\n\n    const handleGoogleSuccess = (credentialResponse) => {\n        const token = credentialResponse.credential;\n\n        localStorage.removeItem(\"isLogin\");\n        localStorage.removeItem(\"userName\");\n        localStorage.removeItem(\"userID\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"supabase_access_token\");\n\n\n        fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/google\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ credential: token }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                //console.log(\"Server response:\", data);\n                console.log(\"Username from data:\", data.userName);\n                localStorage.setItem(\"isLogin\", \"true\");\n                localStorage.setItem(\"userName\", data.userName);\n                localStorage.setItem(\"userID\", String(data.userID));\n                navigate(\"/\");\n                // Store JWT or user data if needed\n            })\n            .catch(err => console.error(\"Auth error\", err));\n\n        console.log(\"Google credential:\", credentialResponse);\n        console.log(\"Decoded token:\", jwtDecode(token));\n        console.log(\"Usernmae from token:\", jwtDecode(token).name);\n    };\n\n    const handleGoogleError = () => {\n        console.log(\"Google login failed\");\n    };\n\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\">\n            <AuthForm\n                onSubmit={handleLogin}\n                isLogin={true} // Sign-up mode \n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                showGoogleButton={true}\n                onGoogleSuccess={handleGoogleSuccess}\n                onGoogleError={handleGoogleError}\n            />\n        </div>\n    );\n\n};\n\nexport default Login;\n","// HomeNavbar.jsx\nimport \"../styles/HomeNavbar.css\"\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport logo from \"../assets/quizapp_logo.png\";\nimport icon from \"../assets/person-icon-1.png\";\n\n// HomeNavbar component\nconst HomeNavbar = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        // Update login state whenever location changes (re-render trigger)\n        const loggedIn = localStorage.getItem(\"isLogin\") === \"true\";\n        setIsLoggedIn(loggedIn);\n    }, [location]);\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"isLogin\");\n        setIsLoggedIn(false);\n        localStorage.clear();\n        navigate(\"/login\");\n    };\n\n    // Determine which link to show\n    const isLoginPage = location.pathname === \"/login\";\n    const isSignupPage = location.pathname === \"/signup\";\n\n    const userName = localStorage.getItem(\"userName\");\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <div className=\"logo\">\n                <Link to=\"/\">\n                    <img src={logo} alt=\"quiz-app-logo\" />\n                </Link>\n            </div>\n            <div className=\"nav-right\">\n                <ul className=\"nav-links\">\n                    {isLoggedIn && (\n                        <p className=\"welcome-message\">Welcome, {userName || \"User\"}! 🎉</p>\n                    )}\n                    {!isLoggedIn && !isLoginPage && (\n                        <li>\n                            <Link to=\"/login\" className=\"bordered-link\">Login</Link>\n                        </li>\n                    )}\n                    {!isLoggedIn && !isSignupPage && (\n                        <li>\n                            <Link to=\"/signup\" className=\"bordered-link\">Sign Up</Link>\n                        </li>\n                    )}\n                    {isLoggedIn && (\n                        <>\n                            <li>\n                                <Link to=\"/my-quizzes\" className=\"bordered-link btn btn-link text-white\">My Quizzes</Link>\n                            </li>\n                            <li>\n                                <button onClick={handleLogout} className=\"bordered-link btn btn-link text-white\">\n                                    Logout\n                                </button>\n                            </li>\n                        </>\n                    )}\n                </ul>\n                <div className=\"icon\">\n                    <Link to={isLoggedIn ? \"/profile\" : \"/\"}>\n                        <img src={icon} alt=\"quiz-app-logo\" />\n                    </Link>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default HomeNavbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst QuizNavbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>QUIZ TIME</h1>\n      <ul className=\"nav-links\">\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/results\">Results</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default QuizNavbar;\n","import React from \"react\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"bg-dark text-white text-center py-2\">\n            <p className=\"m-0\">&copy; 2025 QuizApp</p>\n        </footer>  \n    );\n};\nexport default Footer;","// components/Layout.js\nimport React, { useEffect } from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport HomeNavbar from \"./HomeNavbar\";\nimport QuizNavbar from \"./QuizNavbar\";\nimport Footer from \"./Footer\";\n\nconst Layout = () => {\n    const location = useLocation();\n\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            fetch(\"https://quiz-backend-5rjf.onrender.com/api/ping\")\n                .then(() => console.log(\"Pinged backend\"))\n                .catch(err => console.error(\"Ping failed:\", err));\n        }, 5 * 60 * 1000); // every 5 minutes\n\n        return () => clearInterval(interval);\n    }, []);\n\n    // Choose Navbar based on the current route\n    let Navbar;\n    if (\n      location.pathname === \"/\" ||\n      location.pathname.startsWith(\"/quiz-generator\") ||\n      location.pathname === \"/login\" ||\n      location.pathname === \"/signup\" ||\n      location.pathname === \"/profile\" ||\n      location.pathname === \"/my-quizzes\" ||\n      location.pathname.startsWith(\"/explanations\") ||\n      location.pathname.startsWith(\"/attempts\")\n    ) {\n        Navbar = HomeNavbar;  // Use the same navbar for login and signup pages\n    } else if (location.pathname.startsWith(\"/quiz\")) {\n        Navbar = QuizNavbar;    // Use a different navbar for quiz pages\n    } else {\n        Navbar = null;      // no navabr for some pages\n    }\n\n    let footer;\n    if(location.pathname === \"/take-quiz\") footer = false;\n    else footer = true;\n    \n    return (\n        <div className={`App d-flex flex-column min-vh-100 ${\n            !isLogin || location.pathname === \"/profile\" ? \"bg-black\" : \"bg-secondary\"\n        }`}>\n\n            {Navbar && <Navbar />}\n            <main>\n                <Outlet />  {/* Render the active page */}\n            </main>\n            <div className=\"flex-grow-1\"></div> {/* This ensures content grows and pushes footer down */}\n            {footer && <Footer />}\n        </div>\n    );\n};\n\nexport default Layout;","import React from 'react';\n\nconst QuestionCard = ({ question, current, total, selectedAnswer, onSelect, onNext }) => {\n  return (\n    <div className=\"card bg-dark text-white\" style={{ border: '1px solid #237ac3' }}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">Question {current + 1} of {total}</h5>\n        <h3 className=\"mb-4\">{question.question}</h3>\n\n        <div className=\"options mb-4\">\n          {question.options.map((option, index) => (\n            <div key={index} className=\"form-check mb-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"quizOption\"\n                id={`option${index}`}\n                value={option}\n                checked={selectedAnswer === option}\n                onChange={() => onSelect(option)}\n              />\n              <label className=\"form-check-label\" htmlFor={`option${index}`}>\n                {option}\n              </label>\n            </div>\n          ))}\n        </div>\n\n        <button \n          className=\"btn btn-primary\"\n          onClick={onNext}\n          disabled={!selectedAnswer}\n        >\n          {current === total - 1 ? 'Finish Quiz' : 'Next Question'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionCard;\n","// pages/QuizResult.js\n\nimport React from 'react';\n\nconst QuizResult = ({topic, score, quizID, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate, quizData, userAnswers, quizType}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    //const userID = localStorage.getItem(\"userID\");\n    \n    //const [explanationID, setExplanationID] = useState(null);\n    //const [hasSaved, setHasSaved] = useState(false);\n    const type = quizType;\n    console.log(\"Quiz Type: \", type);\n  \n    return (\n      <div className=\"card bg-dark text-white\" style={{ border: '1px solid #237ac3' }}>\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate(`/quiz-generator/${type}`)}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;","// src/QuizExplanations.js\nimport React from 'react';\n\nconst QuizExplanations = ({quizData, userAnswers, onRetake, onBackToResults, navigate, readOnly, quizType}) => {\n    console.log(\"QuizExplanations loaded\");\n    console.log(\"QuizExplanations loaded, readOnly = \", readOnly);\n\n    return (\n        <div className=\"card text-white bg-dark border\" >\n            <div className=\"card-body\">\n                <h2 className=\"text-center mb-4\">Explanations</h2>\n                \n                {quizData.map((question, index) => (\n                    <div key={index} className=\"mb-4 p-3 border rounded\" style={{backgroundColor: \"#1a1a1a\"}} >\n                        <h4>{index + 1}. {question.question}</h4>\n                        <div className=\"options mt-2\">\n                            {question.options.map((option, optIndex) => (\n                            <div key={optIndex} className={`mb-1 ${\n                                option === question.correctAnswer \n                                ? 'text-success fw-bold' \n                                : option === userAnswers[index]\n                                    ? 'text-danger' \n                                    : ''\n                            }`}>\n                                {option} {option === question.correctAnswer && '✓'} \n                                {option === userAnswers[index] && option !== question.correctAnswer && '✗'}\n                            </div>\n                            ))}\n                        </div>\n                        <div className=\"explanation mt-3 p-2 bg-dark border-info border rounded\">\n                            <h5>Explanation:</h5>\n                            <p>{question.explanation}</p>\n                        </div>\n                    </div>\n                ))}\n                {!readOnly && (\n                    <div className=\"text-center mt-4\">\n                        <button className=\"btn btn-primary me-2\" onClick={onRetake}>\n                        Retake Quiz\n                        </button>\n                        <button className=\"btn btn-secondary me-2\" onClick={() => navigate(`/quiz-generator/${quizType}`)}>\n                        New Quiz\n                        </button>\n                        <button className=\"btn btn-info me-2\" onClick={() => {\n                        console.log(\"Button clicked\"); \n                        onBackToResults();\n                        }}>\n                        Back to Results\n                        </button>\n\n                        <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default QuizExplanations;","// pages/TakeQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport QuestionCard from '../components/QuestionCard';\nimport QuizResult from '../components/QuizResult';\nimport QuizExplanations from '../components/QuizExplanations';\nimport axios from 'axios';\n\nconst TakeQuiz = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const [quizData, setQuizData] = useState([]);\n    const [quizTopic, setQuizTopic] = useState('');\n    const [quizDifficulty, setQuizDifficulty] = useState('');\n    const [quizID, setQuizID] = useState('');\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedAnswer, setSelectedAnswer] = useState('');\n    const [score, setScore] = useState(0);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [viewMode, setViewMode] = useState('quiz'); // 'quiz' | 'results' | 'explanations'\n    const [totalAttempts, setTotalAttempts] = useState(0);\n    const [quizType, setQuizType] = useState('');\n    const [hasSaved, setHasSaved] = useState(false);\n\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n\n    useEffect(() => {\n        if (location.state?.questions) {\n            setQuizData(location.state.questions);\n            setQuizTopic(location.state.topic || 'Quiz');\n            setQuizDifficulty(location.state.difficulty);\n            setQuizType(location.state.type);\n            setQuizID(location.state.quizID || ''); // fallback if missing\n            setUserAnswers(new Array(location.state.questions.length).fill(''));\n        } else {\n            navigate('/quiz-generator/ai');\n        }\n    }, [location, navigate]);\n\n    useEffect(() => {\n        const saveEverything = async () => {\n            if (!isLogin || !userID || !quizData.length || !quizID || hasSaved) return;\n\n            try {\n                const explanationResponse = await axios.post('https://quiz-backend-5rjf.onrender.com/api/explanations/save', {\n                    userID,\n                    quizID,\n                    topic: quizTopic,\n                    explanationData: {\n                        quizData,\n                        userAnswers\n                    }\n                });\n\n                const explanationID = explanationResponse.data.explanationID;\n                console.log(\"Explanation saved with ID:\", explanationID);\n\n                const resultPayload = {\n                    userID,\n                    topic: quizTopic,\n                    score,\n                    total: quizData.length,\n                    attempts: totalAttempts,\n                    difficulty: quizDifficulty,\n                    quizID,\n                    explanationID,\n                };\n\n                const resultRes = await axios.post('https://quiz-backend-5rjf.onrender.com/api/result/save-results', resultPayload);\n                if (resultRes.status === 200) {\n                    console.log(\"Saved results successfully\");\n                    setHasSaved(true);\n                }\n            } catch (err) {\n                console.error(\"Failed to save quiz result or explanations:\", err);\n            }\n        };\n\n        if (viewMode === 'results' && !hasSaved) {\n            saveEverything();\n        }\n    }, [isLogin, userID, quizData, userAnswers, quizID, score, totalAttempts, quizTopic, quizDifficulty, viewMode, hasSaved]);\n\n    const handleNextQuestion = () => {\n        const newUserAnswers = [...userAnswers];\n        newUserAnswers[currentQuestion] = selectedAnswer;\n        setUserAnswers(newUserAnswers);\n\n        if (selectedAnswer === quizData[currentQuestion].correctAnswer) {\n            setScore(score + 1);\n        }\n\n        if (currentQuestion < quizData.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n            setSelectedAnswer('');\n        } else {\n            setViewMode('results');\n            setTotalAttempts(totalAttempts + 1);\n        }\n    };\n\n    const handleRetakeQuiz = () => {\n        setCurrentQuestion(0);\n        setSelectedAnswer('');\n        setScore(0);\n        setUserAnswers(new Array(quizData.length).fill(''));\n        setViewMode('quiz');\n        setHasSaved(false);\n    };\n\n    const handleContinueTrying = () => {\n        setCurrentQuestion(0);\n        setSelectedAnswer('');\n        setScore(0);\n        setHasSaved(false);\n        setViewMode('quiz');\n    };\n\n    const handleShowExplanations = () => {\n        setViewMode('explanations');\n    };\n\n    const handleBackToResults = () => {\n        setViewMode('results');\n    };\n\n    if (!quizData.length) return <div className=\"container mt-5 text-center\">Loading...</div>;\n\n    return (\n        <div className=\"container text-white mt-4 mb-4 p-4 border-0 rounded-4\" style={{ backgroundColor: \"#1a1a1a\" }}>\n            <h2 className=\"text-center mb-4\" style={{ color: '#28a745' }} >{quizTopic} Quiz</h2>\n\n            {viewMode === 'quiz' && (\n                <QuestionCard\n                    question={quizData[currentQuestion]}\n                    current={currentQuestion}\n                    total={quizData.length}\n                    selectedAnswer={selectedAnswer}\n                    onSelect={setSelectedAnswer}\n                    onNext={handleNextQuestion}\n                />\n            )}\n\n            {viewMode === 'results' && (\n                <QuizResult\n                    topic={quizTopic}\n                    score={score}\n                    quizID={quizID}\n                    total={quizData.length}\n                    attempts={totalAttempts}\n                    onTryAgain={handleContinueTrying}\n                    difficulty={quizDifficulty}\n                    onShowExplanations={handleShowExplanations}\n                    navigate={navigate}\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    quizType={quizType}\n                />\n            )}\n\n            {viewMode === 'explanations' && (\n                <QuizExplanations\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    onRetake={handleRetakeQuiz}\n                    onBackToResults={handleBackToResults}\n                    navigate={navigate}\n                    readOnly={false}\n                    quizType={quizType}\n                    quizID={quizID}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default TakeQuiz;\n","import React, { useEffect, useState } from \"react\";\nimport icon from \"../assets/person-icon-1.png\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Profile = () => {\n    const [user, setUser] = useState({\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n        quizzesCompleted: 0,\n        averageScore: \"0%\",\n        questionsAnswered: 0,\n    });\n\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        const userID = localStorage.getItem(\"userID\");\n        console.log(\"USER ID:\",userID);\n    \n        const fetchUserInfo = async () => {\n            const res = await fetch(`https://quiz-backend-5rjf.onrender.com/api/user/${userID}`);\n            const data = await res.json();\n            setUser(prev => ({\n                ...prev,\n                name: data.username,\n                email: data.email,\n                joined: new Date(data.joined).toLocaleString(\"default\", { month: \"long\", year: \"numeric\" }),\n            }));\n        };\n    \n        const fetchStats = async () => {\n            try {\n                const res = await fetch(`https://quiz-backend-5rjf.onrender.com/api/result/attempts/${userID}`);\n                const attempts = await res.json();\n        \n                const quizzesCompleted = attempts.length;\n        \n                let totalScore = 0;\n                let totalPossible = 0;\n                let totalQuestionsAnswered = 0;\n        \n                attempts.forEach(attempt => {\n                    totalScore += attempt.score;\n                    totalPossible += attempt.totalquestions;\n                    totalQuestionsAnswered += attempt.totalquestions;\n                });\n\n                console.log(\"Total Score: \", totalScore);\n        \n                const averageScore = totalPossible > 0\n                    ? `${Math.round((totalScore / totalPossible) * 100)}%`\n                    : \"0%\";\n        \n                setUser(prev => ({\n                    ...prev,\n                    quizzesCompleted,\n                    averageScore,\n                    questionsAnswered: totalQuestionsAnswered,\n                }));\n            } catch (err) {\n                console.error(\"Failed to fetch stats:\", err);\n            }\n        };        \n    \n        fetchUserInfo();\n        fetchStats();\n    }, []);\n\n    return (\n        <div className=\"position-relative\" style={{ height: \"88vh\" }}>\n      \n          {/* Background split */}\n          <div className=\"d-flex flex-column h-100\">\n            {/* Black top background */}\n            <div className=\"bg-black\" style={{ flex: '0 0 30%' }}></div>\n\n            {/* Gray bottom background */}\n            <div className=\"bg-secondary\" style={{ flex: '0 0 70%' }}></div>\n          </div>\n      \n          {/* Card positioned on top */}\n          <div\n            className=\"bg-white rounded-4 shadow-lg p-4 d-flex flex-column align-items-center\"\n            style={{\n                width: '100%',\n                maxWidth: '700px',\n                position: 'absolute',\n                top: '30%',\n                left: '50%',\n                transform: 'translate(-50%, -25%)',\n                textAlign: 'center'\n            }}\n          >\n            {/* Profile Picture */}\n            <div style={{ position: 'absolute', top: '-60px', left: '50%', transform: 'translateX(-50%)' }}>\n              <img \n                src={icon} \n                alt=\"Profile\" \n                className=\"rounded-circle\" \n                style={{ width: '120px', \n                         height: '120px', \n                         objectFit: 'cover', \n                         border: '5px solid white', \n                         boxShadow: '0 4px 20px rgba(0,0,0,0.2)' }}\n              />\n            </div>\n      \n            {/* Top Buttons */}\n            <div className=\"d-flex justify-content-between mt-5 px-3 w-100\">\n              <div style={{ color: '#3a7bd5', fontSize: '14px', cursor: 'pointer' }} \n                  onClick={() => navigate('/my-quizzes')} \n              >\n                <i className=\"bi bi-collection\" style={{ marginRight: '4px' }}></i> Quizzes\n              </div>\n              <div style={{ color: '#3a7bd5', fontSize: '14px', cursor: 'pointer' }}\n                    onClick={() => navigate('/attempts')}\n              >\n                <i className=\"bi bi-award\" style={{ marginRight: '4px' }}></i> Attempts\n              </div>\n            </div>\n      \n            {/* User Info */}\n            <div className=\"mt-3\">\n              <h3 className=\"fw-bold text-dark mb-1\">{user.name}</h3>\n              <p className=\"text-secondary mb-1\">{user.email}</p>\n              <p className=\"text-muted\" style={{ fontSize: '14px' }}>Joined {user.joined}</p>\n            </div>\n      \n            {/* Stats */}\n            <div className=\"d-flex justify-content-around my-4 w-100\">\n              <div>\n                <h4 className=\"fw-bold text-primary mb-0\">{user.quizzesCompleted}</h4>\n                <small className=\"text-dark\">Quizzes</small>\n              </div>\n              <div>\n                <h4 className=\"fw-bold text-primary mb-0\">{user.averageScore}</h4>\n                <small className=\"text-dark\">Avg Score</small>\n              </div>\n              <div>\n                <h4 className=\"fw-bold text-primary mb-0\">{user.questionsAnswered}</h4>\n                <small className=\"text-dark\">Questions</small>\n              </div>\n            </div>\n      \n            {/* Show More Button */}\n            <div className=\"dropdown\">\n              <button \n                className=\"btn btn-primary rounded-pill px-4 py-2 d-flex align-items-center gap-2\" \n                type=\"button\" \n                id=\"quizDropdown\" \n                data-bs-toggle=\"dropdown\" \n                aria-expanded=\"false\"\n                style={{\n                  fontWeight: '600',\n                  fontSize: '16px',\n                  borderColor: '#0d6efd'\n                }}\n              >\n                Take New Quiz \n                <i className=\"bi bi-chevron-down\" style={{ fontSize: '14px' }}></i>\n              </button>\n\n              <ul \n                className=\"dropdown-menu border-0 shadow-sm text-center\"\n                aria-labelledby=\"quizDropdown\"\n                style={{\n                  borderRadius: '1rem',\n                  backgroundColor: '#ffffff',\n                  padding: '0.25rem 0',\n                  marginTop: '0',\n                  minWidth: '180px'\n                }}\n              >\n                <li>\n                  <div\n                    className=\"dropdown-item fw-semibold py-2\"\n                    onClick={() => navigate('/quiz-generator/ai')}\n                    style={{\n                      fontSize: '14px',\n                      color: '#6c757d',\n                      backgroundColor: 'transparent',\n                      cursor: 'pointer',\n                      transition: 'all 0.2s ease',\n                      borderRadius: '0.5rem'\n                    }}\n                    onMouseEnter={e => {\n                      e.currentTarget.style.backgroundColor = '#0d6efd';\n                      e.currentTarget.style.color = '#ffffff';\n                    }}\n                    onMouseLeave={e => {\n                      e.currentTarget.style.backgroundColor = 'transparent';\n                      e.currentTarget.style.color = '#6c757d';\n                    }}\n                  >\n                    <span role=\"img\" aria-label=\"Brain\">🧠</span> AI Quiz\n                  </div>\n                </li>\n                <li>\n                  <div\n                    className=\"dropdown-item fw-semibold py-2\"\n                    onClick={() => navigate('/quiz-generator/trivia')}\n                    style={{\n                      fontSize: '14px',\n                      color: '#6c757d',\n                      backgroundColor: 'transparent',\n                      cursor: 'pointer',\n                      transition: 'all 0.2s ease',\n                      borderRadius: '0.5rem'\n                    }}\n                    onMouseEnter={e => {\n                      e.currentTarget.style.backgroundColor = '#0d6efd';\n                      e.currentTarget.style.color = '#ffffff';\n                    }}\n                    onMouseLeave={e => {\n                      e.currentTarget.style.backgroundColor = 'transparent';\n                      e.currentTarget.style.color = '#6c757d';\n                    }}\n                  >\n                    <span role=\"img\" aria-label=\"Target\">🎯</span> Trivia Quiz\n                  </div>\n                </li>\n              </ul>\n            </div>\n\n          </div>\n        </div>\n    );\n};\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst QuizGenerator = () => {\n  const { type } = useParams();\n  const quizType = type;\n\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  //const [selectedCategory, setSelectedCategory] = useState(\"\");\n  \n  // Debug: Log the quiz type when component loads\n  useEffect(() => {\n    console.log(\"QuizGenerator loaded with type:\", quizType);\n  }, [quizType]);\n\n  useEffect(() => {\n    const saveQuizAndNavigate = async () => {\n      if (quizData && quizData.length > 0) {\n        try {\n          // Create the quiz\n          const response = await axios.post('https://quiz-backend-5rjf.onrender.com/api/quiz/create', {\n            title: topic,\n          });\n\n          const quizID = response.data.quizID;\n          console.log(\"Quiz created ID: \", quizID);\n\n          // Save all questions\n          const savedQuestions = await axios.post('https://quiz-backend-5rjf.onrender.com/api/quiz/save-questions', {\n            quizID,\n            title: topic,\n            questions: quizData,\n            difficulty\n          });\n          const questionID = savedQuestions.data.questionID;\n          console.log(\"Question ID: \", questionID);\n  \n          navigate('/take-quiz', {\n            state: {\n              questions: quizData,\n              topic,\n              difficulty,\n              quizID,\n              type,\n            },\n          });\n        } catch (error) {\n          console.error(\"Failed to save quiz:\", error);\n          alert(\"There was an error saving the quiz. Please try again.\");\n        }\n      }\n    };\n\n    saveQuizAndNavigate();\n  }, [quizData, navigate, topic, difficulty, type]);\n\n  useEffect(() => {\n    // Fetch the categories from Open Trivia DB API\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\"https://opentdb.com/api_category.php\");\n        setCategories(response.data.trivia_categories);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        setError(\"Failed to load categories.\");\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const handleGenerateQuiz = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    \n    console.log(`Generating ${quizType} quiz with:`, { topic, numberOfQuestions, difficulty });\n\n    try {\n      let response;\n\n      if (quizType === 'ai') {\n        response = await axios.post(`https://quiz-backend-5rjf.onrender.com/api/ai-quiz/generate`, {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        console.log(\"AI quiz response:\", response.data);\n        \n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n      } else if (quizType === 'trivia') {\n        //console.log(\"Making trivia quiz request to:\", `${API_BASE}/api/trivia`);\n        response = await axios.post(`https://quiz-backend-5rjf.onrender.com/api/trivia-quiz/generate`, {\n          category: topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        console.log(\"Trivia quiz response:\", response.data);\n        \n        if (response.data && response.data.questions) {\n          setQuizData(response.data.questions);\n          console.log(\"Trivia questions:\", response.data.questions);\n        } else {\n          setError('Failed to generate trivia questions.');\n        }\n      } else {\n        setError(`Unknown quiz type: ${quizType}`);\n      }\n    } catch (err) {\n      console.error('Error generating quiz:', err);\n      // Show more detailed error information\n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        setError(`Server error: ${err.response.status} - ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        console.error('Error request:', err.request);\n        setError('No response received from server. Please check your connection.');\n      } else {\n        console.error('Error message:', err.message);\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"container text-white p-4 rounded-4\"\n      style={{ \n        backgroundColor: \"#1a1a1a\", \n        maxWidth: \"500px\",  // Limit the maximum width\n        minHeight: \"50vh\",   // Reduce minimum height from 70vh\n        marginTop: \"4rem\",\n        marginBottom: \"3rem\"\n      }}\n    >\n      { (quizType === 'trivia' && categories.length === 0) ? (\n        <div className=\"text-center p-5\">Loading categories...</div>\n      ) : (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <div className=\"text-center mb-4\">\n              <h2 style={{\n                color: \"#4da6ff\", // Bright blue for attention\n                fontWeight: \"600\",\n                textShadow: \"0px 0px 10px rgba(77, 166, 255, 0.3)\" // Subtle glow effect\n              }}>\n                Ready to Challenge Yourself?\n              </h2>\n              <p style={{\n                color: \"#cccccc\", // Slightly lighter than white for contrast\n                fontSize: \"1.1rem\",\n                letterSpacing: \"0.5px\"\n              }}>\n                Choose a topic, set your difficulty, and we'll generate questions just for you!\n              </p>\n            </div>\n              <div className=\"form-container bg-dark\">\n                <form onSubmit={handleGenerateQuiz} className=\"p-3 rounded-lg m-4 shadow-md\" >\n                  <div className=\"form-group\">\n                    {type === 'ai' && \n                      <>\n                        <label htmlFor=\"topic\">What do you want to get tested on?</label>\n                          <input\n                            type=\"text\"\n                            id=\"topic\"\n                            value={topic}\n                            onChange={(e) => setTopic(e.target.value)}\n                            placeholder=\"e.g., Artificial Intelligence\"\n                            required\n                            className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                            style={{\n                              boxShadow: 'none',\n                              WebkitBoxShadow: '0 0 0 1000px black inset',\n                              WebkitTextFillColor: 'white',\n                            }}\n                          />\n                      </>\n                    }\n                    {type === 'trivia' && \n                      <>\n                        <label htmlFor=\"category\">Select a Trivia Category:</label>\n                          <select\n                            id=\"category\"\n                            value={topic}\n                            onChange={(e) => setTopic(e.target.value)}\n                            className=\"form-control bg-black text-white border-bottom-0\"\n                          >\n                            <option value=\"\">Select a category</option>\n                            {categories.map((category) => (\n                              <option key={category.name} value={category.name}>\n                                {category.name}\n                              </option>\n                            ))}\n                          </select>\n                      </>\n                    }\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"numQuestions\">Number of Questions:</label>\n                    <select \n                      id=\"numQuestions\" \n                      value={numberOfQuestions}\n                      onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n                      className=\"form-control bg-black text-white border-bottom-0\"\n                    >\n                      <option value=\"3\">3</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"10\">10</option>\n                    </select>\n                  </div>\n              \n                  <div className=\"form-group\">\n                    <label htmlFor=\"difficulty\">Difficulty Level:</label>\n                    <select \n                      id=\"difficulty\"\n                      value={difficulty}\n                      onChange={(e) => setDifficulty(e.target.value)}\n                      className=\"form-control bg-black text-white border-bottom-0\"\n                    >\n                      <option value=\"easy\">Easy</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"hard\">Hard</option>\n                    </select>\n                  </div>\n              \n                  <button \n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"btn btn-primary transition\"\n                    style={{transformOrigin: 'center'}}\n                    onMouseOver={ (e) =>  e.target.style.transform = 'scale(1.05)'}\n                    onMouseOut={(e) =>  e.target.style.transform = 'scale(1)'}\n                  >\n                    {isLoading ? 'Generating...' : 'Generate Quiz'}\n                  </button>\n                </form>\n                {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n              </div>\n          </div>\n        </div>\n      )}\n      {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n    </div>\n  );\n};\n\nexport default QuizGenerator;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\n\n\nconst MyQuizzes = () => {\n    const [quizzes, setQuizzes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const userID = localStorage.getItem(\"userID\");\n    const navigate = useNavigate();\n\n    const onViewExplanations = (explanationID) => {\n        navigate(`/explanations/${explanationID}`);\n    };\n\n    const onViewAttempts = (quizID) => {\n        navigate(`/attempts/${quizID}`);\n    }\n\n    const onRetakeQuiz = (quizID) => {\n        navigate(`/retake-quiz/${quizID}`);\n    }\n\n    const handleDelete = async (explanationID, quizID) => {\n        if (!window.confirm(\"Are you sure you want to delete this attempt?\")) return;\n        console.log(\"Explanation ID: \", explanationID);\n        console.log(\"Quiz ID: \", quizID);\n      \n        try {\n            await axios.delete(`https://quiz-backend-5rjf.onrender.com/api/delete/by-user/${userID}/${quizID}/${explanationID}`);\n            //console.log(\"Quiz deleted:\", deleted);\n            // delete successfully\n            window.location.reload(); // refresh the page\n        } catch (err) {\n          console.error(\"Failed to delete attempt:\", err);\n          alert(\"Something went wrong.\");\n        }\n     };\n\n    const getDifficultyBadge = (difficulty) => {\n        switch (difficulty?.toLowerCase()) {\n          case 'easy':\n            return 'bg-success';\n          case 'medium':\n            return 'bg-warning text-dark';\n          case 'hard':\n            return 'bg-danger';\n          default:\n            return 'bg-secondary';\n        }\n    };\n      \n\n    useEffect(() => {\n        const fetchQuizzes = async () => {\n        try {\n            const res = await axios.get(`https://quiz-backend-5rjf.onrender.com/api/result/quiz/${userID}`);\n            setQuizzes(res.data || []);\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching quizzes:\", err);\n            setError(\"Failed to load quizzes.\");\n            setLoading(false);\n        }\n        };\n\n        fetchQuizzes();\n    }, [userID]);\n\n    //console.log(quizzes);\n\n    if (loading) return <p className=\"text-white\">Loading your quizzes...</p>;\n    if (error) return <p className=\"text-danger\">{error}</p>;\n\n    return (\n        <div className=\"container pt-4 pb-4 px-4\">\n            <div className=\"card text-white border-0 rounded-4 shadow-sm p-4\" style={{ backgroundColor: '#1a1a1a' }}>\n                <h2 className=\"mb-4 text-center\" style={{ color: '#28a745' }} >My Quizzes</h2>\n            \n                {quizzes.length === 0 ? (\n                <p>You haven't saved any quizzes yet.</p>\n                ) : (\n                    <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n                        {quizzes.map((quiz) => (\n                            <div key={quiz.quizid} className=\"col\">\n                                <div className=\"card bg-dark text-light h-100 border-primary\">\n                                    <div className=\"card-body\">\n                                        <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                                            <h5 className=\"card-title\">{quiz.topic}</h5>\n                                            {/* Dropdown menu */}\n                                            <Dropdown onClick={(e) => e.stopPropagation()}>\n                                                <Dropdown.Toggle\n                                                    as={({ children, onClick }) => (\n                                                    <div\n                                                        onClick={(e) => {\n                                                        e.preventDefault();\n                                                        onClick(e);\n                                                        }}\n                                                        style={{ cursor: 'pointer',\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        backgroundColor: '#212529',\n                                                        borderRadius: '0.25rem',\n                                                        color: '#fff',\n                                                        }}\n                                                    >\n                                                        {children}\n                                                    </div>\n                                                    )}\n                                                    id={`dropdown-${quiz.quizid}`}\n                                                >\n                                                    <i className=\"bi bi-three-dots-vertical\"></i>\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu \n                                                    variant=\"dark\"\n                                                    className=\"rounded-3\"\n                                                    style={{\n                                                        backgroundColor: '#1a1a1a', // Pure black background\n                                                        transform: 'translateX(-100px)', // Shift left by 10px\n                                                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)' // Add subtle shadow for depth\n                                                    }} \n                                                >\n                                                    <Dropdown.Item onClick={() => onViewExplanations(quiz.explanationid)}>\n                                                        <i className=\"bi bi-question-circle me-2\"></i> View Explanations\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item onClick={() => onViewAttempts(quiz.quizid)}>\n                                                        <i className=\"bi bi-clock-history me-2\"></i> View Attempts\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item onClick={() => onRetakeQuiz(quiz.quizid)}>\n                                                        <i className=\"bi bi-arrow-repeat me-2\"></i> Retake Quiz\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Divider />\n                                                    <Dropdown.Item \n                                                        onClick={() => handleDelete(quiz.explanationid, quiz.quizid)}\n                                                        className=\"text-danger\"\n                                                    >\n                                                        <i className=\"bi bi-trash me-2\"></i> Delete Quiz\n                                                    </Dropdown.Item>\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>\n                                        <div className=\"d-flex justify-content-between\">\n                                                <p className=\"card-text mb-1\">\n                                                    Taken on {new Date(quiz.createdat).toLocaleDateString()}\n                                                </p>\n                                                <span className={`badge ${getDifficultyBadge(quiz.difficulty)}`}\n                                                        style={{\n                                                            display: 'inline-flex',\n                                                            alignItems: 'center',\n                                                            justifyContent: 'center',\n                                                            height: '100%',\n                                                          }}\n                                                >\n                                                    {quiz.difficulty || 'N/A'}\n                                                </span>\n                                        </div>\n                                        <div className=\"d-flex justify-content-between mt-2\">\n                                            <span className=\"badge bg-success\">\n                                                {quiz.score}/{quiz.totalquestions}\n                                            </span>\n                                            <span className=\"text-end small\">\n                                                Accuracy: {Math.round((quiz.score / quiz.totalquestions) * 100)}%\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default MyQuizzes;","//src/pages/ExplanationPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport QuizExplanations from '../components/QuizExplanations.js';\n\nconst ExplanationPage = () => {\n    const { explanationID } = useParams();\n    const navigate = useNavigate();\n    const [quizData, setQuizData] = useState([]);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [topic, setTopic] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    const userID = localStorage.getItem(\"userID\");\n\n    useEffect(() => {\n        console.log(\"INSIDE Explanation Page\");\n        const fetchExplanationData = async () => {\n        try {\n            const res = await axios.get(`https://quiz-backend-5rjf.onrender.com/api/explanations/${userID}/${explanationID}`);\n            setQuizData(res.data.questions.quizData);\n            setUserAnswers(res.data.questions.userAnswers);\n            setTopic(res.data.title);\n            console.log(\"Topic: \", res.data.title);\n\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching explanation data:\", err);\n            setLoading(false);\n        }\n        };\n\n        fetchExplanationData();\n    }, [userID, explanationID]);\n\n    const handleRetake = () => {\n        //navigate(`/quiz/${quizID}`); // or wherever your retake route is\n    };\n\n    if (loading) return <p className=\"text-white\">Loading explanations...</p>;\n    if (!quizData.length) return <p className=\"text-danger\">No explanations found.</p>;\n\n    return (\n        <div className=\"container text-white mt-4 mb-4 p-4 rounded\" style={{backgroundColor: \"#1a1a1a\"}} >\n            <h2 className=\"text-center mb-4\" style={{ color: '#28a745' }}>{topic} Quiz</h2>\n                <QuizExplanations\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    onRetake={handleRetake}\n                    navigate={navigate}\n                    readOnly={true}\n                />\n        </div>\n    );\n};\n\nexport default ExplanationPage;\n","// src/pages/AttemptPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst BASE_URL = \"https://quiz-backend-5rjf.onrender.com\";\n\nconst AttemptPage = () => {\n  const { quizID } = useParams();\n  const userID = localStorage.getItem(\"userID\");\n  const [attempts, setAttempts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchAttempts = async () => {\n      try {\n        let res;\n        if(quizID) {\n          res = await axios.get(`${BASE_URL}/api/result/attempts/${userID}/${quizID}`);\n        } else {\n          res = await axios.get(`${BASE_URL}/api/result/attempts/${userID}`);\n        }\n        setAttempts(res.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching attempts:\", err);\n        setError(\"Failed to load attempts.\");\n        setLoading(false);\n      }\n    };\n\n    fetchAttempts();\n  }, [quizID, userID]);\n\n  const handleDelete = async (attemptID, explanationID, quizID) => {\n    if (!window.confirm(\"Are you sure you want to delete this attempt?\")) return;\n    console.log(\"Attempt ID: \", attemptID);\n  \n    try {\n      await axios.delete(`${BASE_URL}/api/delete/${attemptID}/${explanationID}/${quizID}`);\n      setAttempts((prev) => prev.filter((a) => a.attemptID !== attemptID));\n      window.location.reload(); // refresh the page\n    } catch (err) {\n      console.error(\"Failed to delete attempt:\", err);\n      alert(\"Something went wrong.\");\n    }\n };\n\n const onViewExplanations = (explanationID) => {\n    navigate(`/explanations/${explanationID}`);\n };\n\n  if (loading) return <p className=\"text-white\">Loading attempts...</p>;\n  if (error) return <p className=\"text-danger\">{error}</p>;\n\n  return (\n    <div className=\"container pt-4 pb-4\">\n      <div className=\"card text-white rounded-4 shadow-sm p-4\" style={{ backgroundColor: '#1a1a1a' }}>\n        <h2 className=\"mb-4 text-center\" style={{ color: '#28a745' }}>Past Attempts</h2>\n        {attempts.map((attempt, index) => (\n            <div\n                key={index}\n                className=\"d-flex \"\n            >\n                <div\n                    className=\"list-group-item bg- d-flex justify-content-between align-items-center text-white mb-2 rounded flex-grow-1\"\n                    style={{\n                        backgroundColor: '#212529', // Bootstrap bg-dark color\n                        transition: 'background-color 0.3s',\n                        cursor: 'pointer',\n                    }}\n                    onMouseOver={(e) => e.currentTarget.classList.add('bg-primary')}\n                    onMouseOut={(e) => e.currentTarget.classList.remove('bg-primary')}\n                >\n                    <div\n                        className=\"d-flex align-items-center\"\n                        style={{ cursor: 'pointer', flexGrow: 1 }}\n                        onClick={() => onViewExplanations(attempt.explanationid)}\n                    >\n                        <div className='p-2'>\n                            <strong>{attempt.title} Quiz - Attempt #{index + 1}</strong>\n                            <div>\n                            <small>\n                                Taken on {new Date(attempt.createdat).toLocaleString()}\n                            </small>\n                            </div>\n                        </div>\n                    </div>\n            \n                    {/* Score button moved to the right side */}\n                    <div className=\"d-flex align-items-center me-3\">\n                        <span className=\"badge bg-primary\">\n                            {attempt.score}/{attempt.totalquestions} (\n                            {Math.round((attempt.score / attempt.totalquestions) * 100)}%)\n                        </span>\n                    </div>\n                </div>\n                <div\n                    className=\"d-flex justify-content-center align-items-center rounded\"\n                    style={{\n                        backgroundColor: '#212529', // bg-danger\n                        width: '36px',\n                        height: '65px',\n                        cursor: 'pointer',\n                        transition: 'background-color 0.3s',\n                    }}\n                    onClick={() => handleDelete(attempt.attemptid, attempt.explanationid, attempt.quizid)}\n                    onMouseOver={(e) => (e.currentTarget.style.backgroundColor = '#dc3545')} // bg-warning\n                    onMouseOut={(e) => (e.currentTarget.style.backgroundColor = '#212529')}  // bg-danger\n                    >\n                    <i className=\"bi bi-trash text-white\"></i>\n                </div>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AttemptPage;\n","// src/components/RetakeQuiz.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RetakeQuiz = () => {\n    const { quizID } = useParams();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            const BASE_URL = \"https://quiz-backend-5rjf.onrender.com\";\n            try {\n                console.log(\"Retake Quiz ID:\", quizID);\n                const response = await axios.get(`${BASE_URL}/api/quiz/questions/${quizID}`);\n                console.log(\"Retake Raw data response:\", response);\n                const topic = response.data.title;\n                const questions = response.data.content;\n                const difficulty = response.data.difficulty;\n\n                console.log(\"Topic Quiz: \", topic);\n    \n                setLoading(false);\n    \n                navigate('/take-quiz', {\n                    state: {\n                      questions,\n                      topic,\n                      difficulty,\n                      quizID,\n                    },\n            \n                });\n                  \n            } catch (err) {\n                setError('Failed to fetch quiz questions');\n                setLoading(false);\n            }\n        };\n    \n        fetchQuestions();\n    }, [quizID, navigate]);\n    \n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p className=\"text-danger\">{error}</p>;\n\n    return null; // Because navigate will redirect the user\n};\n\nexport default RetakeQuiz;\n","// PrivateRoute.js\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nconst PrivateRoute = ({ children }) => {\n  const isLoggedIn = localStorage.getItem(\"isLogin\") === \"true\";\n\n  // If not logged in, redirect to login page\n  if (!isLoggedIn) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Otherwise, render the protected page\n  return children;\n};\n\nexport default PrivateRoute;\n","// App.js\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout\";\nimport TakeQuiz from \"./pages/TakeQuiz\";\nimport Profile from \"./pages/Profile\";\nimport QuizGenerator from \"./pages/QuizGenerator\";\nimport MyQuizzes from \"./pages/MyQuizzes\";\nimport ExplanationPage from './pages/ExplanationPage';\nimport AttemptPage from './pages/AttemptPage';\nimport RetakeQuiz from './components/RetakeQuiz'\nimport QuizSelection from \"./components/QuizSelection\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nfunction App() {\n  //const isLogin = localStorage.getItem(\"isLogin\");\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Home />} /> \n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/QuizSelection\" element={<QuizSelection />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/take-quiz\" element={<TakeQuiz />} />\n          <Route path=\"/quiz-generator/:type\" element={<QuizGenerator />} />\n          <Route path=\"/profile\" element={ <PrivateRoute> <Profile /> </PrivateRoute> } />\n          <Route path=\"/my-quizzes\" element={ <PrivateRoute> <MyQuizzes /> </PrivateRoute> } />\n          <Route path=\"/attempts/:quizID\" element={ <PrivateRoute> <AttemptPage /> </PrivateRoute> } />\n          <Route path=\"/attempts\" element={ <PrivateRoute> <AttemptPage /> </PrivateRoute> } />\n          <Route path=\"/retake-quiz/:quizID\" element={ <PrivateRoute> <RetakeQuiz /> </PrivateRoute> } />\n          <Route path=\"/explanations/:explanationID\" element={<ExplanationPage />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './components/reportWebVitals';\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </GoogleOAuthProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}