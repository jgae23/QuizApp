{"version":3,"sources":["assets/person-icon-1.png","assets/quizapp_logo.png","components/QuizSelection.js","pages/Home.js","components/AuthForm.js","pages/Signup.js","pages/Login.js","components/HomeNavbar.js","components/QuizNavbar.js","components/Footer.js","components/Layout.js","components/QuestionCard.js","components/QuizResult.js","components/QuizExplanations.js","pages/TakeQuiz.js","pages/Profile.js","pages/QuizGenerator.js","pages/MyQuizzes.js","pages/ExplanationPage.js","pages/AttemptPage.js","components/RetakeQuiz.js","App.js","components/reportWebVitals.js","index.js"],"names":["module","exports","QuizSelection","_ref","title","description","comment1","comment2","comment3","type","listItemStyle","marginBottom","paddingLeft","position","aiButtonStyle","backgroundColor","color","border","borderRadius","padding","fontSize","fontWeight","cursor","width","textDecoration","display","textAlign","transition","triviaButtonStyle","linkProps","to","style","text","React","createElement","maxWidth","minWidth","boxShadow","onMouseOver","e","currentTarget","transform","onMouseOut","listStyle","left","Link","Home","isLogin","localStorage","getItem","paragraphStyle","className","flexDirection","alignItems","justifyContent","paddingTop","opacity","flexWrap","gap","marginTop","Fragment","AuthForm","onSubmit","email","setEmail","password","setPassword","setUserName","userName","showGoogleButton","onGoogleSuccess","onGoogleError","showPassword","setShowPassword","useState","htmlFor","id","value","onChange","target","required","WebkitBoxShadow","WebkitTextFillColor","onClick","prev","top","right","tabIndex","Eye","size","EyeOff","borderTop","margin","GoogleLogin","onSuccess","onError","Signup","navigate","useNavigate","async","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setItem","String","userID","console","log","alert","message","err","error","credentialResponse","token","credential","then","res","user","username","catch","jwtDecode","handleGoogleError","Login","onLoginSuccess","payload","_payload$userName","_payload$user","_payload$userID","_payload$user2","warn","decoded","HomeNavbar","location","useLocation","isLoggedIn","setIsLoggedIn","useEffect","loggedIn","isLoginPage","pathname","isSignupPage","src","logo","alt","handleLogout","removeItem","icon","QuizNavbar","Footer","Layout","Navbar","footer","startsWith","Outlet","QuestionCard","question","current","total","selectedAnswer","onSelect","onNext","options","map","option","index","key","name","checked","disabled","QuizResult","topic","score","quizID","attempts","onTryAgain","difficulty","onShowExplanations","quizData","userAnswers","quizType","Math","round","QuizExplanations","onRetake","onBackToResults","readOnly","optIndex","correctAnswer","explanation","TakeQuiz","setQuizData","quizTopic","setQuizTopic","quizDifficulty","setQuizDifficulty","setQuizID","currentQuestion","setCurrentQuestion","setSelectedAnswer","setScore","setUserAnswers","viewMode","setViewMode","totalAttempts","setTotalAttempts","setQuizType","hasSaved","setHasSaved","_location$state","state","questions","Array","length","fill","explanationID","axios","post","explanationData","resultPayload","status","saveEverything","handleNextQuestion","newUserAnswers","handleContinueTrying","handleShowExplanations","handleRetakeQuiz","handleBackToResults","Profile","setUser","joined","quizzesCompleted","averageScore","questionsAnswered","Date","toLocaleString","month","year","fetchUserInfo","totalScore","totalPossible","totalQuestionsAnswered","forEach","attempt","totalQuestions","fetchStats","height","flex","objectFit","marginRight","data-bs-toggle","aria-expanded","borderColor","aria-labelledby","onMouseEnter","onMouseLeave","role","aria-label","QuizGenerator","useParams","setTopic","numberOfQuestions","setNumberOfQuestions","setDifficulty","isLoading","setIsLoading","setError","categories","setCategories","questionID","saveQuizAndNavigate","get","trivia_categories","fetchCategories","minHeight","textShadow","letterSpacing","success","category","request","placeholder","Number","transformOrigin","MyQuizzes","quizzes","setQuizzes","loading","setLoading","getDifficultyBadge","toLowerCase","fetchQuizzes","quiz","Dropdown","stopPropagation","Toggle","as","children","Menu","variant","Item","onViewExplanations","onViewAttempts","onRetakeQuiz","Divider","window","confirm","delete","reload","handleDelete","createdAt","toLocaleDateString","ExplanationPage","fetchExplanationData","handleRetake","AttemptPage","setAttempts","fetchAttempts","classList","add","remove","flexGrow","attemptID","filter","a","RetakeQuiz","fetchQuestions","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","GoogleOAuthProvider","clientId","process","StrictMode"],"mappings":"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","file":"static/js/main.e8ec45cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person-icon-1.f540a12d.png\";","module.exports = __webpack_public_path__ + \"static/media/quizapp_logo.ab8c8e41.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst QuizSelection = ({ \n    title, \n    description, \n    comment1, \n    comment2, \n    comment3, \n    type \n}) => {\n\n    const cardStyle = {\n        backgroundColor: '#2a2a2a',\n        borderRadius: '0.5rem',\n        padding: '1.5rem',\n        maxWidth: '400px',\n        minWidth: '300px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n        transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n    };\n\n    const cardTitleStyle = {\n        fontSize: '1.5rem',\n        marginBottom: '1rem',\n        color: '#ffffff',\n    };\n\n    const cardTextStyle = {\n        color: 'rgba(255, 255, 255, 0.75)',\n        marginBottom: '1.5rem',\n    };\n\n    const listStyle = {\n        listStyle: 'none',\n        padding: 0,\n        marginBottom: '1.5rem',\n        color: '#ffffff',\n    };\n\n    const listItemStyle = {\n        marginBottom: '0.5rem',\n        paddingLeft: '1.5rem',\n        position: 'relative',\n    };\n\n    const aiButtonStyle = {\n        backgroundColor: '#007bff',\n        color: '#ffffff',\n        border: 'none',\n        borderRadius: '0.25rem',\n        padding: '0.75rem 1rem',\n        fontSize: '1rem',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        width: '100%',\n        textDecoration: 'none',\n        display: 'block',\n        textAlign: 'center',\n        transition: 'transform 0.3s ease',\n    };\n\n    const triviaButtonStyle = {\n        ...aiButtonStyle,\n        backgroundColor: '#28a745',\n    };\n\n    // Decide Link based on type\n    const linkProps = type === 'ai'\n        ? { to: '/quiz-generator/ai', style: aiButtonStyle, text: 'Use AI Generator' }\n        : { to: '/quiz-generator/trivia', style: triviaButtonStyle, text: 'Use Trivia Database' };\n\n    return (\n        <div style={cardStyle}\n            onMouseOver={(e) => {\n                e.currentTarget.style.transform = 'translateY(-10px)';\n                e.currentTarget.style.boxShadow = '0 10px 20px rgba(0, 0, 0, 0.2)';\n            }}\n            onMouseOut={(e) => {\n                e.currentTarget.style.transform = 'translateY(0)';\n                e.currentTarget.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\n            }}>\n            <h2 style={cardTitleStyle}>{title}</h2>\n            <p style={cardTextStyle}>{description}</p>\n            <ul style={listStyle}>\n                <li style={listItemStyle}>\n                    <span style={{ position: 'absolute', left: 0 }}>✓</span> {comment1}</li>\n                <li style={listItemStyle}>\n                    <span style={{ position: 'absolute', left: 0 }}>✓</span> {comment2}</li>\n                <li style={listItemStyle}>\n                    <span style={{ position: 'absolute', left: 0 }}>✓</span> {comment3}</li>\n            </ul>\n\n            <Link\n                to={linkProps.to}\n                style={linkProps.style}\n                onMouseOver={(e) => e.currentTarget.style.transform = 'scale(1.05)'}\n                onMouseOut={(e) => e.currentTarget.style.transform = 'scale(1)'}\n            >\n                {linkProps.text}\n            </Link>\n        </div>\n    );\n};\n\nexport default QuizSelection;\n","import React from \"react\";\nimport QuizSelection from \"../components/QuizSelection\";\n\nconst Home = () => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  \n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: '6rem',\n  };\n  \n  const headingStyle = {\n    fontSize: '3rem',\n    marginBottom: '10px',\n    color: '#e0ffff',\n    textAlign: 'center',\n  };\n  \n  const paragraphStyle = {\n    fontSize: '1rem',\n    marginBottom: '20px',\n    color: '#f0f0f0',\n    textAlign: 'center',\n  };\n  const cardsContainerStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: '2rem',\n    marginTop: '2rem',\n    width: '100%',\n    maxWidth: '1200px',\n  };\n    \n  \n  return (\n    // Removed the \"row\" class that was forcing column layout\n    <div className=\"container-fluid justify-content-center\" style={containerStyle}>\n        <h1 style={headingStyle}>Choose Your Quiz Experience</h1>\n        <p style={paragraphStyle}>\n            Select from our AI-powered quizzes or explore our trivia database\n        </p>\n        \n        {!isLogin && (\n            <p style={{ ...paragraphStyle, fontSize: \"0.85rem\", opacity: 0.8 }}>\n            Sign up or Login to save your quizzes, track progress, and more!\n            </p>\n        )}\n        \n        {/* Cards wrapper - will display children in a row */}\n        <div style={cardsContainerStyle}>\n            <QuizSelection\n            title=\"AI-Generated Quiz\"\n            description=\"Generate unique quiz questions on any topic using Claude 3.5 Sonnet AI.\n                Perfect for custom topics or specialized knowledge areas.\"\n            comment1=\"Any topic you can imagine\"\n            comment2=\"Custom difficulty levels\"\n            comment3=\"Unique questions every time\"\n            type=\"ai\"\n            />\n            \n            <QuizSelection\n            title=\"Trivia Database\"\n            description=\"Use our trivia database with thousands of pre-made questions across\n                various categories and difficulty levels.\"\n            comment1=\"Multiple categories\"\n            comment2=\"Three difficulty levels\"\n            comment3=\"Multiple choice questions\"\n            type=\"trivia\"\n            />\n        </div>\n        \n        {isLogin && (\n            <>\n            {/* Future User Features */}\n            </>\n        )}\n    </div>\n  );\n};\n\nexport default Home;","import React from \"react\";\nimport \"../styles/AuthForm.css\"; \nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useState } from \"react\";\nimport { Eye, EyeOff } from \"lucide-react\"\n\nconst AuthForm = ({ \n    onSubmit, isLogin, \n    email, setEmail, \n    password, setPassword, \n    setUserName, userName, \n    showGoogleButton, \n    onGoogleSuccess, \n    onGoogleError }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <div className=\"form-wrapper\">\n            <div className=\"form-container bg-dark\">\n                <form onSubmit={onSubmit} className=\"p-4 rounded-lg shadow-md\">\n                    <h1 className=\"text-white text-center mb-3\">{isLogin ? \"Login\" : \"Create Account\"}</h1>\n                    {!isLogin && (\n                        <div className=\"form-group\">\n                            <label htmlFor=\"userName\" >User Name:</label>\n                            <input\n                                type=\"text\"\n                                id=\"userName\"\n                                value={userName}\n                                onChange={(e) => setUserName(e.target.value)}\n                                required\n                                className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                                style={{\n                                boxShadow: 'none',\n                                WebkitBoxShadow: '0 0 0 1000px black inset',\n                                WebkitTextFillColor: 'white',\n                                }}\n                            />\n                        </div>\n                    )}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\" >Email:</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                            className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                            style={{\n                            boxShadow: 'none',\n                            WebkitBoxShadow: '0 0 0 1000px black inset',\n                            WebkitTextFillColor: 'white',\n                            }}\n                        />\n                    </div>\n                    <div className=\"form-group position-relative\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input\n                        type={showPassword ? \"text\" : \"password\"}\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                        className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                        style={{\n                            boxShadow: 'none',\n                            WebkitBoxShadow: '0 0 0 1000px black inset',\n                            WebkitTextFillColor: 'white',\n                        }}\n                        />\n\n                        {/* Toggle visibility button */}\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-black position-absolute\"\n                        onClick={() => setShowPassword(prev => !prev)}\n                        style={{top: '30px', right: '5px', WebkitBoxShadow: 'none', border: 'none',}}\n                        tabIndex={-1}\n                        >\n                        {showPassword ? <Eye color=\"white\" size={16} /> : <EyeOff color=\"white\" size={16} />}\n                        </button>\n                    </div>\n\n                    <button type=\"submit\" className={`btn btn-signup ${isLogin ? \"btn-primary\" : \"btn-primary\"} btn-block`}>\n                        {isLogin ? \"Login\" : \"Sign Up\"}\n                    </button>\n                </form>\n                <div className=\"d-flex align-items-center justify-content-center\">\n                    <hr style={{ width: '120px', borderTop: '1px solid #ccc', margin: 0 }} />\n                    <span className=\"px-2 text-light\">or</span>\n                    <hr style={{ width: '120px', borderTop: '1px solid #ccc', margin: 0 }} />\n                </div>\n                {showGoogleButton && (\n                    <div className=\"google-login-wrapper my-3 text-center\">\n                        <GoogleLogin\n                            onSuccess={onGoogleSuccess}\n                            onError={onGoogleError}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AuthForm;","// Signup.js\nimport React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst Signup = () => {\n    const [userName, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n  \n    const navigate = useNavigate();\n\n    const handleSignup = async (event) => {\n        event.preventDefault(); // Prevent page refresh\n\n        try {\n            const response = await fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/signup\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ userName, email, password }),\n            });\n    \n            const data = await response.json();\n\n            if (response.ok) {\n                localStorage.setItem(\"isLogin\", \"true\");\n                localStorage.setItem(\"userName\", data.userName);\n                localStorage.setItem(\"userID\", String(data.userID));\n                console.log(\"User ID: \", data.userID);\n\n                navigate(\"/\");\n            } else {\n                alert(data.message || \"Signup failed\");\n            }\n        } catch (err) {\n            console.error(\"Signup error:\", err);\n            alert(\"Signup failed. Try again later.\");\n        }\n\n        // Reset form fields after submission\n        setUserName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n    };\n\n    const handleGoogleSuccess = (credentialResponse) => {\n        const token = credentialResponse.credential;\n\n        fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/google\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ credential: token }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(\"Server response:\", data);\n                localStorage.setItem(\"isLogin\", \"true\");\n                localStorage.setItem(\"userName\", data.user.username);\n                localStorage.setItem(\"userID\", String(data.user.userID));\n                navigate(\"/\");\n                // Store JWT or user data if needed\n            })\n            .catch(err => console.error(\"Auth error\", err));\n\n        console.log(\"Google credential:\", credentialResponse);\n        console.log(\"Decoded token:\", jwtDecode(token));\n    };\n    \n    const handleGoogleError = () => {\n        console.log(\"Google login failed\");\n    };\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\">\n            <AuthForm\n                onSubmit={handleSignup}\n                isLogin={false}\n                userName={userName}\n                setUserName={setUserName}\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                showGoogleButton={true}\n                onGoogleSuccess={handleGoogleSuccess}\n                onGoogleError={handleGoogleError}\n            />\n        </div>\n    );\n\n};\n\nexport default Signup;\n","// client/src/pages/Login.jsx\nimport React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport {jwtDecode} from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Helper to persist login info\n  const onLoginSuccess = (payload) => {\n    // payload should contain: userName, userID, token (optional)\n    const userName = payload.userName ?? payload.user?.username;\n    const userID = payload.userID ?? payload.user?.userID;\n\n    if (!userName || !userID) {\n      console.warn(\"Login succeeded but missing user info:\", payload);\n      return;\n    }\n\n    // Store minimal state\n    localStorage.setItem(\"isLogin\", \"true\");\n    localStorage.setItem(\"userName\", userName);\n    localStorage.setItem(\"userID\", String(userID));\n\n    if (payload.token) {\n      localStorage.setItem(\"token\", payload.token); // or use cookie\n    }\n\n    navigate(\"/\");\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n      console.log(\"Raw response data:\", data);\n\n      if (!response.ok) {\n        alert(data.message || data.error || \"Login failed\");\n        return;\n      }\n\n      onLoginSuccess(data);\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      alert(\"Login failed. Try again later.\");\n    } finally {\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    const token = credentialResponse?.credential;\n    if (!token) {\n      alert(\"Missing Google credential\");\n      return;\n    }\n\n    try {\n      const res = await fetch(\"https://quiz-backend-5rjf.onrender.com/api/auth/google\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ credential: token }),\n      });\n      const data = await res.json();\n      console.log(\"Server response:\", data);\n\n      if (!res.ok) {\n        alert(data.error || data.message || \"Google login failed\");\n        return;\n      }\n\n      onLoginSuccess(data);\n    } catch (err) {\n      console.error(\"Auth error\", err);\n      alert(\"Google login failed\");\n    }\n\n    try {\n      const decoded = jwtDecode(token);\n      console.log(\"Decoded Google token:\", decoded);\n    } catch {\n      // not critical\n    }\n  };\n\n  const handleGoogleError = () => {\n    console.log(\"Google login failed\");\n    alert(\"Google login failed\");\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center\">\n      <AuthForm\n        onSubmit={handleLogin}\n        isLogin={true}\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        showGoogleButton={true}\n        onGoogleSuccess={handleGoogleSuccess}\n        onGoogleError={handleGoogleError}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","// HomeNavbar.jsx\nimport \"../styles/HomeNavbar.css\"\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport logo from \"../assets/quizapp_logo.png\";\nimport icon from \"../assets/person-icon-1.png\";\n\n// HomeNavbar component\nconst HomeNavbar = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        // Update login state whenever location changes (re-render trigger)\n        const loggedIn = localStorage.getItem(\"isLogin\") === \"true\";\n        setIsLoggedIn(loggedIn);\n    }, [location]);\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"isLogin\");\n        setIsLoggedIn(false);\n        navigate(\"/login\");\n    };\n\n    // Determine which link to show\n    const isLoginPage = location.pathname === \"/login\";\n    const isSignupPage = location.pathname === \"/signup\";\n\n    const userName = localStorage.getItem(\"userName\");\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <div className=\"logo\">\n                <Link to=\"/\">\n                    <img src={logo} alt=\"quiz-app-logo\" />\n                </Link>\n            </div>\n            <div className=\"nav-right\">\n                <ul className=\"nav-links\">\n                    {isLoggedIn && (\n                        <p className=\"welcome-message\">Welcome, {userName || \"User\"}! 🎉</p>\n                    )}\n                    {!isLoggedIn && !isLoginPage && (\n                        <li>\n                            <Link to=\"/login\" className=\"bordered-link\">Login</Link>\n                        </li>\n                    )}\n                    {!isLoggedIn && !isSignupPage && (\n                        <li>\n                            <Link to=\"/signup\" className=\"bordered-link\">Sign Up</Link>\n                        </li>\n                    )}\n                    {isLoggedIn && (\n                        <>\n                            <li>\n                                <Link to=\"/my-quizzes\" className=\"bordered-link btn btn-link text-white\">My Quizzes</Link>\n                            </li>\n                            <li>\n                                <button onClick={handleLogout} className=\"bordered-link btn btn-link text-white\">\n                                    Logout\n                                </button>\n                            </li>\n                        </>\n                    )}\n                </ul>\n                <div className=\"icon\">\n                    <Link to={isLoggedIn ? \"/profile\" : \"/\"}>\n                        <img src={icon} alt=\"quiz-app-logo\" />\n                    </Link>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default HomeNavbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst QuizNavbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>QUIZ TIME</h1>\n      <ul className=\"nav-links\">\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/results\">Results</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default QuizNavbar;\n","import React from \"react\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"bg-dark text-white text-center py-2\">\n            <p className=\"m-0\">&copy; 2025 QuizApp</p>\n        </footer>  \n    );\n};\nexport default Footer;","// components/Layout.js\nimport React from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport HomeNavbar from \"./HomeNavbar\";\nimport QuizNavbar from \"./QuizNavbar\";\nimport Footer from \"./Footer\";\n\nconst Layout = () => {\n    const location = useLocation();\n\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n\n    // Choose Navbar based on the current route\n    let Navbar;\n    if (\n      location.pathname === \"/\" ||\n      location.pathname.startsWith(\"/quiz-generator\") ||\n      location.pathname === \"/login\" ||\n      location.pathname === \"/signup\" ||\n      location.pathname === \"/profile\" ||\n      location.pathname === \"/my-quizzes\" ||\n      location.pathname.startsWith(\"/explanations\") ||\n      location.pathname.startsWith(\"/attempts\")\n    ) {\n        Navbar = HomeNavbar;  // Use the same navbar for login and signup pages\n    } else if (location.pathname.startsWith(\"/quiz\")) {\n        Navbar = QuizNavbar;    // Use a different navbar for quiz pages\n    } else {\n        Navbar = null;      // no navabr for some pages\n    }\n\n    let footer;\n    if(location.pathname === \"/take-quiz\") footer = false;\n    else footer = true;\n    \n    return (\n        <div className={`App d-flex flex-column min-vh-100 ${\n            !isLogin || location.pathname === \"/profile\" ? \"bg-black\" : \"bg-secondary\"\n        }`}>\n\n            {Navbar && <Navbar />}\n            <main>\n                <Outlet />  {/* Render the active page */}\n            </main>\n            <div className=\"flex-grow-1\"></div> {/* This ensures content grows and pushes footer down */}\n            {footer && <Footer />}\n        </div>\n    );\n};\n\nexport default Layout;","import React from 'react';\n\nconst QuestionCard = ({ question, current, total, selectedAnswer, onSelect, onNext }) => {\n  return (\n    <div className=\"card bg-dark text-white\" style={{ border: '1px solid #237ac3' }}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">Question {current + 1} of {total}</h5>\n        <h3 className=\"mb-4\">{question.question}</h3>\n\n        <div className=\"options mb-4\">\n          {question.options.map((option, index) => (\n            <div key={index} className=\"form-check mb-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"quizOption\"\n                id={`option${index}`}\n                value={option}\n                checked={selectedAnswer === option}\n                onChange={() => onSelect(option)}\n              />\n              <label className=\"form-check-label\" htmlFor={`option${index}`}>\n                {option}\n              </label>\n            </div>\n          ))}\n        </div>\n\n        <button \n          className=\"btn btn-primary\"\n          onClick={onNext}\n          disabled={!selectedAnswer}\n        >\n          {current === total - 1 ? 'Finish Quiz' : 'Next Question'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionCard;\n","// pages/QuizResult.js\n\nimport React from 'react';\n\nconst QuizResult = ({topic, score, quizID, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate, quizData, userAnswers, quizType}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    //const userID = localStorage.getItem(\"userID\");\n    \n    //const [explanationID, setExplanationID] = useState(null);\n    //const [hasSaved, setHasSaved] = useState(false);\n    const type = quizType;\n    console.log(\"Quiz Type: \", type);\n  \n    return (\n      <div className=\"card bg-dark text-white\" style={{ border: '1px solid #237ac3' }}>\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate(`/quiz-generator/${type}`)}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;","// src/QuizExplanations.js\nimport React from 'react';\n\nconst QuizExplanations = ({quizData, userAnswers, onRetake, onBackToResults, navigate, readOnly, quizType}) => {\n    console.log(\"QuizExplanations loaded\");\n    console.log(\"QuizExplanations loaded, readOnly = \", readOnly);\n\n    return (\n        <div className=\"card text-white bg-dark border\" >\n            <div className=\"card-body\">\n                <h2 className=\"text-center mb-4\">Explanations</h2>\n                \n                {quizData.map((question, index) => (\n                    <div key={index} className=\"mb-4 p-3 border rounded\" style={{backgroundColor: \"#1a1a1a\"}} >\n                        <h4>{index + 1}. {question.question}</h4>\n                        <div className=\"options mt-2\">\n                            {question.options.map((option, optIndex) => (\n                            <div key={optIndex} className={`mb-1 ${\n                                option === question.correctAnswer \n                                ? 'text-success fw-bold' \n                                : option === userAnswers[index]\n                                    ? 'text-danger' \n                                    : ''\n                            }`}>\n                                {option} {option === question.correctAnswer && '✓'} \n                                {option === userAnswers[index] && option !== question.correctAnswer && '✗'}\n                            </div>\n                            ))}\n                        </div>\n                        <div className=\"explanation mt-3 p-2 bg-dark border-info border rounded\">\n                            <h5>Explanation:</h5>\n                            <p>{question.explanation}</p>\n                        </div>\n                    </div>\n                ))}\n                {!readOnly && (\n                    <div className=\"text-center mt-4\">\n                        <button className=\"btn btn-primary me-2\" onClick={onRetake}>\n                        Retake Quiz\n                        </button>\n                        <button className=\"btn btn-secondary me-2\" onClick={() => navigate(`/quiz-generator/${quizType}`)}>\n                        New Quiz\n                        </button>\n                        <button className=\"btn btn-info me-2\" onClick={() => {\n                        console.log(\"Button clicked\"); \n                        onBackToResults();\n                        }}>\n                        Back to Results\n                        </button>\n\n                        <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default QuizExplanations;","// pages/TakeQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport QuestionCard from '../components/QuestionCard';\nimport QuizResult from '../components/QuizResult';\nimport QuizExplanations from '../components/QuizExplanations';\nimport axios from 'axios';\n\nconst TakeQuiz = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const [quizData, setQuizData] = useState([]);\n    const [quizTopic, setQuizTopic] = useState('');\n    const [quizDifficulty, setQuizDifficulty] = useState('');\n    const [quizID, setQuizID] = useState('');\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedAnswer, setSelectedAnswer] = useState('');\n    const [score, setScore] = useState(0);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [viewMode, setViewMode] = useState('quiz'); // 'quiz' | 'results' | 'explanations'\n    const [totalAttempts, setTotalAttempts] = useState(0);\n    const [quizType, setQuizType] = useState('');\n    const [hasSaved, setHasSaved] = useState(false);\n\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n\n    useEffect(() => {\n        if (location.state?.questions) {\n            setQuizData(location.state.questions);\n            setQuizTopic(location.state.topic || 'Quiz');\n            setQuizDifficulty(location.state.difficulty);\n            setQuizType(location.state.type);\n            setQuizID(location.state.quizID || ''); // fallback if missing\n            setUserAnswers(new Array(location.state.questions.length).fill(''));\n        } else {\n            navigate('/quiz-generator/ai');\n        }\n    }, [location, navigate]);\n\n    useEffect(() => {\n        const saveEverything = async () => {\n            if (!isLogin || !userID || !quizData.length || !quizID || hasSaved) return;\n\n            try {\n                const explanationResponse = await axios.post('https://quiz-backend-5rjf.onrender.com/api/explanations/save', {\n                    userID,\n                    quizID,\n                    topic: quizTopic,\n                    explanationData: {\n                        quizData,\n                        userAnswers\n                    }\n                });\n\n                const explanationID = explanationResponse.data.explanationID;\n                console.log(\"Explanation saved with ID:\", explanationID);\n\n                const resultPayload = {\n                    userID,\n                    topic: quizTopic,\n                    score,\n                    total: quizData.length,\n                    attempts: totalAttempts,\n                    difficulty: quizDifficulty,\n                    quizID,\n                    explanationID,\n                };\n\n                const resultRes = await axios.post('https://quiz-backend-5rjf.onrender.com/api/result/save-results', resultPayload);\n                if (resultRes.status === 200) {\n                    console.log(\"Saved results successfully\");\n                    setHasSaved(true);\n                }\n            } catch (err) {\n                console.error(\"Failed to save quiz result or explanations:\", err);\n            }\n        };\n\n        if (viewMode === 'results' && !hasSaved) {\n            saveEverything();\n        }\n    }, [isLogin, userID, quizData, userAnswers, quizID, score, totalAttempts, quizTopic, quizDifficulty, viewMode, hasSaved]);\n\n    const handleNextQuestion = () => {\n        const newUserAnswers = [...userAnswers];\n        newUserAnswers[currentQuestion] = selectedAnswer;\n        setUserAnswers(newUserAnswers);\n\n        if (selectedAnswer === quizData[currentQuestion].correctAnswer) {\n            setScore(score + 1);\n        }\n\n        if (currentQuestion < quizData.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n            setSelectedAnswer('');\n        } else {\n            setViewMode('results');\n            setTotalAttempts(totalAttempts + 1);\n        }\n    };\n\n    const handleRetakeQuiz = () => {\n        setCurrentQuestion(0);\n        setSelectedAnswer('');\n        setScore(0);\n        setUserAnswers(new Array(quizData.length).fill(''));\n        setViewMode('quiz');\n        setHasSaved(false);\n    };\n\n    const handleContinueTrying = () => {\n        setCurrentQuestion(0);\n        setSelectedAnswer('');\n        setScore(0);\n        setHasSaved(false);\n        setViewMode('quiz');\n    };\n\n    const handleShowExplanations = () => {\n        setViewMode('explanations');\n    };\n\n    const handleBackToResults = () => {\n        setViewMode('results');\n    };\n\n    if (!quizData.length) return <div className=\"container mt-5 text-center\">Loading...</div>;\n\n    return (\n        <div className=\"container text-white mt-4 mb-4 p-4 border-0 rounded-4\" style={{ backgroundColor: \"#1a1a1a\" }}>\n            <h1 className=\"text-center mb-4\" style={{ color: '#28a745' }} >{quizTopic} Quiz</h1>\n\n            {viewMode === 'quiz' && (\n                <QuestionCard\n                    question={quizData[currentQuestion]}\n                    current={currentQuestion}\n                    total={quizData.length}\n                    selectedAnswer={selectedAnswer}\n                    onSelect={setSelectedAnswer}\n                    onNext={handleNextQuestion}\n                />\n            )}\n\n            {viewMode === 'results' && (\n                <QuizResult\n                    topic={quizTopic}\n                    score={score}\n                    quizID={quizID}\n                    total={quizData.length}\n                    attempts={totalAttempts}\n                    onTryAgain={handleContinueTrying}\n                    difficulty={quizDifficulty}\n                    onShowExplanations={handleShowExplanations}\n                    navigate={navigate}\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    quizType={quizType}\n                />\n            )}\n\n            {viewMode === 'explanations' && (\n                <QuizExplanations\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    onRetake={handleRetakeQuiz}\n                    onBackToResults={handleBackToResults}\n                    navigate={navigate}\n                    readOnly={false}\n                    quizType={quizType}\n                    quizID={quizID}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default TakeQuiz;\n","import React, { useEffect, useState } from \"react\";\nimport icon from \"../assets/person-icon-1.png\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Profile = () => {\n    const [user, setUser] = useState({\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n        quizzesCompleted: 0,\n        averageScore: \"0%\",\n        questionsAnswered: 0,\n    });\n\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        const userID = localStorage.getItem(\"userID\");\n        console.log(\"USER ID:\",userID);\n    \n        const fetchUserInfo = async () => {\n            const res = await fetch(`https://quiz-backend-5rjf.onrender.com/api/user/${userID}`);\n            const data = await res.json();\n            setUser(prev => ({\n                ...prev,\n                name: data.username,\n                email: data.email,\n                joined: new Date(data.joined).toLocaleString(\"default\", { month: \"long\", year: \"numeric\" }),\n            }));\n        };\n    \n        const fetchStats = async () => {\n            try {\n                const res = await fetch(`https://quiz-backend-5rjf.onrender.com/api/result/attempts/${userID}`);\n                const attempts = await res.json();\n        \n                const quizzesCompleted = attempts.length;\n        \n                let totalScore = 0;\n                let totalPossible = 0;\n                let totalQuestionsAnswered = 0;\n        \n                attempts.forEach(attempt => {\n                    totalScore += attempt.score;\n                    totalPossible += attempt.totalQuestions;\n                    totalQuestionsAnswered += attempt.totalQuestions;\n                });\n\n                console.log(\"Total Score: \", totalScore);\n        \n                const averageScore = totalPossible > 0\n                    ? `${Math.round((totalScore / totalPossible) * 100)}%`\n                    : \"0%\";\n        \n                setUser(prev => ({\n                    ...prev,\n                    quizzesCompleted,\n                    averageScore,\n                    questionsAnswered: totalQuestionsAnswered,\n                }));\n            } catch (err) {\n                console.error(\"Failed to fetch stats:\", err);\n            }\n        };        \n    \n        fetchUserInfo();\n        fetchStats();\n    }, []);\n\n    return (\n        <div className=\"position-relative\" style={{ height: \"88vh\" }}>\n      \n          {/* Background split */}\n          <div className=\"d-flex flex-column h-100\">\n            {/* Black top background */}\n            <div className=\"bg-black\" style={{ flex: '0 0 30%' }}></div>\n\n            {/* Gray bottom background */}\n            <div className=\"bg-secondary\" style={{ flex: '0 0 70%' }}></div>\n          </div>\n      \n          {/* Card positioned on top */}\n          <div\n            className=\"bg-white rounded-4 shadow-lg p-4 d-flex flex-column align-items-center\"\n            style={{\n                width: '100%',\n                maxWidth: '700px',\n                position: 'absolute',\n                top: '30%',\n                left: '50%',\n                transform: 'translate(-50%, -25%)',\n                textAlign: 'center'\n            }}\n          >\n            {/* Profile Picture */}\n            <div style={{ position: 'absolute', top: '-60px', left: '50%', transform: 'translateX(-50%)' }}>\n              <img \n                src={icon} \n                alt=\"Profile\" \n                className=\"rounded-circle\" \n                style={{ width: '120px', \n                         height: '120px', \n                         objectFit: 'cover', \n                         border: '5px solid white', \n                         boxShadow: '0 4px 20px rgba(0,0,0,0.2)' }}\n              />\n            </div>\n      \n            {/* Top Buttons */}\n            <div className=\"d-flex justify-content-between mt-5 px-3 w-100\">\n              <div style={{ color: '#3a7bd5', fontSize: '14px', cursor: 'pointer' }} \n                  onClick={() => navigate('/my-quizzes')} \n              >\n                <i className=\"bi bi-collection\" style={{ marginRight: '4px' }}></i> Quizzes\n              </div>\n              <div style={{ color: '#3a7bd5', fontSize: '14px', cursor: 'pointer' }}\n                    onClick={() => navigate('/attempts')}\n              >\n                <i className=\"bi bi-award\" style={{ marginRight: '4px' }}></i> Attempts\n              </div>\n            </div>\n      \n            {/* User Info */}\n            <div className=\"mt-3\">\n              <h3 className=\"fw-bold text-dark mb-1\">{user.name}</h3>\n              <p className=\"text-secondary mb-1\">{user.email}</p>\n              <p className=\"text-muted\" style={{ fontSize: '14px' }}>Joined {user.joined}</p>\n            </div>\n      \n            {/* Stats */}\n            <div className=\"d-flex justify-content-around my-4 w-100\">\n              <div>\n                <h4 className=\"fw-bold text-primary mb-0\">{user.quizzesCompleted}</h4>\n                <small className=\"text-dark\">Quizzes</small>\n              </div>\n              <div>\n                <h4 className=\"fw-bold text-primary mb-0\">{user.averageScore}</h4>\n                <small className=\"text-dark\">Avg Score</small>\n              </div>\n              <div>\n                <h4 className=\"fw-bold text-primary mb-0\">{user.questionsAnswered}</h4>\n                <small className=\"text-dark\">Questions</small>\n              </div>\n            </div>\n      \n            {/* Show More Button */}\n            <div className=\"dropdown\">\n              <button \n                className=\"btn btn-primary rounded-pill px-4 py-2 d-flex align-items-center gap-2\" \n                type=\"button\" \n                id=\"quizDropdown\" \n                data-bs-toggle=\"dropdown\" \n                aria-expanded=\"false\"\n                style={{\n                  fontWeight: '600',\n                  fontSize: '16px',\n                  borderColor: '#0d6efd'\n                }}\n              >\n                Take New Quiz \n                <i className=\"bi bi-chevron-down\" style={{ fontSize: '14px' }}></i>\n              </button>\n\n              <ul \n                className=\"dropdown-menu border-0 shadow-sm text-center\"\n                aria-labelledby=\"quizDropdown\"\n                style={{\n                  borderRadius: '1rem',\n                  backgroundColor: '#ffffff',\n                  padding: '0.25rem 0',\n                  marginTop: '0',\n                  minWidth: '180px'\n                }}\n              >\n                <li>\n                  <div\n                    className=\"dropdown-item fw-semibold py-2\"\n                    onClick={() => navigate('/quiz-generator/ai')}\n                    style={{\n                      fontSize: '14px',\n                      color: '#6c757d',\n                      backgroundColor: 'transparent',\n                      cursor: 'pointer',\n                      transition: 'all 0.2s ease',\n                      borderRadius: '0.5rem'\n                    }}\n                    onMouseEnter={e => {\n                      e.currentTarget.style.backgroundColor = '#0d6efd';\n                      e.currentTarget.style.color = '#ffffff';\n                    }}\n                    onMouseLeave={e => {\n                      e.currentTarget.style.backgroundColor = 'transparent';\n                      e.currentTarget.style.color = '#6c757d';\n                    }}\n                  >\n                    <span role=\"img\" aria-label=\"Brain\">🧠</span> AI Quiz\n                  </div>\n                </li>\n                <li>\n                  <div\n                    className=\"dropdown-item fw-semibold py-2\"\n                    onClick={() => navigate('/quiz-generator/trivia')}\n                    style={{\n                      fontSize: '14px',\n                      color: '#6c757d',\n                      backgroundColor: 'transparent',\n                      cursor: 'pointer',\n                      transition: 'all 0.2s ease',\n                      borderRadius: '0.5rem'\n                    }}\n                    onMouseEnter={e => {\n                      e.currentTarget.style.backgroundColor = '#0d6efd';\n                      e.currentTarget.style.color = '#ffffff';\n                    }}\n                    onMouseLeave={e => {\n                      e.currentTarget.style.backgroundColor = 'transparent';\n                      e.currentTarget.style.color = '#6c757d';\n                    }}\n                  >\n                    <span role=\"img\" aria-label=\"Target\">🎯</span> Trivia Quiz\n                  </div>\n                </li>\n              </ul>\n            </div>\n\n          </div>\n        </div>\n    );\n};\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst QuizGenerator = () => {\n  const { type } = useParams();\n  const quizType = type;\n\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  //const [selectedCategory, setSelectedCategory] = useState(\"\");\n  \n  // Debug: Log the quiz type when component loads\n  useEffect(() => {\n    console.log(\"QuizGenerator loaded with type:\", quizType);\n  }, [quizType]);\n\n  useEffect(() => {\n    const saveQuizAndNavigate = async () => {\n      if (quizData && quizData.length > 0) {\n        try {\n          // Create the quiz\n          const response = await axios.post('https://quiz-backend-5rjf.onrender.com/api/quiz/create', {\n            title: topic,\n          });\n\n          const quizID = response.data.quizID;\n          console.log(\"Quiz created ID: \", quizID);\n\n          // Save all questions\n          const savedQuestions = await axios.post('https://quiz-backend-5rjf.onrender.com/api/quiz/save-questions', {\n            quizID,\n            title: topic,\n            questions: quizData,\n            difficulty\n          });\n          const questionID = savedQuestions.data.questionID;\n          console.log(\"Question ID: \", questionID);\n  \n          navigate('/take-quiz', {\n            state: {\n              questions: quizData,\n              topic,\n              difficulty,\n              quizID,\n              type,\n            },\n          });\n        } catch (error) {\n          console.error(\"Failed to save quiz:\", error);\n          alert(\"There was an error saving the quiz. Please try again.\");\n        }\n      }\n    };\n\n    saveQuizAndNavigate();\n  }, [quizData, navigate, topic, difficulty, type]);\n\n  useEffect(() => {\n    // Fetch the categories from Open Trivia DB API\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\"https://opentdb.com/api_category.php\");\n        setCategories(response.data.trivia_categories);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        setError(\"Failed to load categories.\");\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const handleGenerateQuiz = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    \n    console.log(`Generating ${quizType} quiz with:`, { topic, numberOfQuestions, difficulty });\n\n    try {\n      let response;\n\n      if (quizType === 'ai') {\n        response = await axios.post(`https://quiz-backend-5rjf.onrender.com/api/ai-quiz/generate`, {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        console.log(\"AI quiz response:\", response.data);\n        \n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n      } else if (quizType === 'trivia') {\n        //console.log(\"Making trivia quiz request to:\", `${API_BASE}/api/trivia`);\n        response = await axios.post(`https://quiz-backend-5rjf.onrender.com/api/trivia-quiz/generate`, {\n          category: topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        console.log(\"Trivia quiz response:\", response.data);\n        \n        if (response.data && response.data.questions) {\n          setQuizData(response.data.questions);\n          console.log(\"Trivia questions:\", response.data.questions);\n        } else {\n          setError('Failed to generate trivia questions.');\n        }\n      } else {\n        setError(`Unknown quiz type: ${quizType}`);\n      }\n    } catch (err) {\n      console.error('Error generating quiz:', err);\n      // Show more detailed error information\n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        setError(`Server error: ${err.response.status} - ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        console.error('Error request:', err.request);\n        setError('No response received from server. Please check your connection.');\n      } else {\n        console.error('Error message:', err.message);\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"container text-white p-4 rounded-4\"\n      style={{ \n        backgroundColor: \"#1a1a1a\", \n        maxWidth: \"500px\",  // Limit the maximum width\n        minHeight: \"50vh\",   // Reduce minimum height from 70vh\n        marginTop: \"4rem\",\n        marginBottom: \"3rem\"\n      }}\n    >\n      { (quizType === 'trivia' && categories.length === 0) ? (\n        <div className=\"text-center p-5\">Loading categories...</div>\n      ) : (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <div className=\"text-center mb-4\">\n              <h2 style={{\n                color: \"#4da6ff\", // Bright blue for attention\n                fontWeight: \"600\",\n                textShadow: \"0px 0px 10px rgba(77, 166, 255, 0.3)\" // Subtle glow effect\n              }}>\n                Ready to Challenge Yourself?\n              </h2>\n              <p style={{\n                color: \"#cccccc\", // Slightly lighter than white for contrast\n                fontSize: \"1.1rem\",\n                letterSpacing: \"0.5px\"\n              }}>\n                Choose a topic, set your difficulty, and we'll generate questions just for you!\n              </p>\n            </div>\n              <div className=\"form-container bg-dark\">\n                <form onSubmit={handleGenerateQuiz} className=\"p-3 rounded-lg m-4 shadow-md\" >\n                  <div className=\"form-group\">\n                    {type === 'ai' && \n                      <>\n                        <label htmlFor=\"topic\">What do you want to get tested on?</label>\n                          <input\n                            type=\"text\"\n                            id=\"topic\"\n                            value={topic}\n                            onChange={(e) => setTopic(e.target.value)}\n                            placeholder=\"e.g., Artificial Intelligence\"\n                            required\n                            className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                            style={{\n                              boxShadow: 'none',\n                              WebkitBoxShadow: '0 0 0 1000px black inset',\n                              WebkitTextFillColor: 'white',\n                            }}\n                          />\n                      </>\n                    }\n                    {type === 'trivia' && \n                      <>\n                        <label htmlFor=\"category\">Select a Trivia Category:</label>\n                          <select\n                            id=\"category\"\n                            value={topic}\n                            onChange={(e) => setTopic(e.target.value)}\n                            className=\"form-control bg-black text-white border-bottom-0\"\n                          >\n                            <option value=\"\">Select a category</option>\n                            {categories.map((category) => (\n                              <option key={category.name} value={category.name}>\n                                {category.name}\n                              </option>\n                            ))}\n                          </select>\n                      </>\n                    }\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"numQuestions\">Number of Questions:</label>\n                    <select \n                      id=\"numQuestions\" \n                      value={numberOfQuestions}\n                      onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n                      className=\"form-control bg-black text-white border-bottom-0\"\n                    >\n                      <option value=\"3\">3</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"10\">10</option>\n                    </select>\n                  </div>\n              \n                  <div className=\"form-group\">\n                    <label htmlFor=\"difficulty\">Difficulty Level:</label>\n                    <select \n                      id=\"difficulty\"\n                      value={difficulty}\n                      onChange={(e) => setDifficulty(e.target.value)}\n                      className=\"form-control bg-black text-white border-bottom-0\"\n                    >\n                      <option value=\"easy\">Easy</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"hard\">Hard</option>\n                    </select>\n                  </div>\n              \n                  <button \n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"btn btn-primary transition\"\n                    style={{transformOrigin: 'center'}}\n                    onMouseOver={ (e) =>  e.target.style.transform = 'scale(1.05)'}\n                    onMouseOut={(e) =>  e.target.style.transform = 'scale(1)'}\n                  >\n                    {isLoading ? 'Generating...' : 'Generate Quiz'}\n                  </button>\n                </form>\n                {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n              </div>\n          </div>\n        </div>\n      )}\n      {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n    </div>\n  );\n};\n\nexport default QuizGenerator;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\n\n\nconst MyQuizzes = () => {\n    const [quizzes, setQuizzes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const userID = localStorage.getItem(\"userID\");\n    const navigate = useNavigate();\n\n    const onViewExplanations = (explanationID) => {\n        navigate(`/explanations/${explanationID}`);\n    };\n\n    const onViewAttempts = (quizID) => {\n        navigate(`/attempts/${quizID}`);\n    }\n\n    const onRetakeQuiz = (quizID) => {\n        navigate(`/retake-quiz/${quizID}`);\n    }\n\n    const handleDelete = async (explanationID, quizID) => {\n        if (!window.confirm(\"Are you sure you want to delete this attempt?\")) return;\n        console.log(\"Explanation ID: \", explanationID);\n        console.log(\"Quiz ID: \", quizID);\n      \n        try {\n          await axios.delete(`https://quiz-backend-5rjf.onrender.com/api/delete/${userID}/${quizID}/${explanationID}`);\n          // delete successfully\n          window.location.reload(); // refresh the page\n        } catch (err) {\n          console.error(\"Failed to delete attempt:\", err);\n          alert(\"Something went wrong.\");\n        }\n     };\n\n    const getDifficultyBadge = (difficulty) => {\n        switch (difficulty?.toLowerCase()) {\n          case 'easy':\n            return 'bg-success';\n          case 'medium':\n            return 'bg-warning text-dark';\n          case 'hard':\n            return 'bg-danger';\n          default:\n            return 'bg-secondary';\n        }\n    };\n      \n\n    useEffect(() => {\n        const fetchQuizzes = async () => {\n        try {\n            const res = await axios.get(`https://quiz-backend-5rjf.onrender.com/api/result/quiz/${userID}`);\n            setQuizzes(res.data);\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching quizzes:\", err);\n            setError(\"Failed to load quizzes.\");\n            setLoading(false);\n        }\n        };\n\n        fetchQuizzes();\n    }, [userID]);\n\n    //console.log(quizzes);\n\n    if (loading) return <p className=\"text-white\">Loading your quizzes...</p>;\n    if (error) return <p className=\"text-danger\">{error}</p>;\n\n    return (\n        <div className=\"container pt-4 pb-4 px-4\">\n            <div className=\"card text-white border-0 rounded-4 shadow-sm p-4\" style={{ backgroundColor: '#1a1a1a' }}>\n                <h2 className=\"mb-4 text-center\" style={{ color: '#28a745' }} >My Quizzes</h2>\n            \n                {quizzes.length === 0 ? (\n                <p>You haven't saved any quizzes yet.</p>\n                ) : (\n                    <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n                        {quizzes.map((quiz) => (\n                            <div key={quiz.quizID} className=\"col\">\n                                <div className=\"card bg-dark text-light h-100 border-primary\">\n                                    <div className=\"card-body\">\n                                        <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                                            <h5 className=\"card-title\">{quiz.topic}</h5>\n                                            {/* Dropdown menu */}\n                                            <Dropdown onClick={(e) => e.stopPropagation()}>\n                                                <Dropdown.Toggle\n                                                    as={({ children, onClick }) => (\n                                                    <div\n                                                        onClick={(e) => {\n                                                        e.preventDefault();\n                                                        onClick(e);\n                                                        }}\n                                                        style={{ cursor: 'pointer',\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        backgroundColor: '#212529',\n                                                        borderRadius: '0.25rem',\n                                                        color: '#fff',\n                                                        }}\n                                                    >\n                                                        {children}\n                                                    </div>\n                                                    )}\n                                                    id={`dropdown-${quiz.quizID}`}\n                                                >\n                                                    <i className=\"bi bi-three-dots-vertical\"></i>\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu \n                                                    variant=\"dark\"\n                                                    className=\"rounded-3\"\n                                                    style={{\n                                                        backgroundColor: '#1a1a1a', // Pure black background\n                                                        transform: 'translateX(-100px)', // Shift left by 10px\n                                                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)' // Add subtle shadow for depth\n                                                    }} \n                                                >\n                                                    <Dropdown.Item onClick={() => onViewExplanations(quiz.explanationID)}>\n                                                        <i className=\"bi bi-question-circle me-2\"></i> View Explanations\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item onClick={() => onViewAttempts(quiz.quizID)}>\n                                                        <i className=\"bi bi-clock-history me-2\"></i> View Attempts\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item onClick={() => onRetakeQuiz(quiz.quizID)}>\n                                                        <i className=\"bi bi-arrow-repeat me-2\"></i> Retake Quiz\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Divider />\n                                                    <Dropdown.Item \n                                                        onClick={() => handleDelete(quiz.explanationID, quiz.quizID)}\n                                                        className=\"text-danger\"\n                                                    >\n                                                        <i className=\"bi bi-trash me-2\"></i> Delete Quiz\n                                                    </Dropdown.Item>\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>\n                                        <div className=\"d-flex justify-content-between\">\n                                                <p className=\"card-text mb-1\">\n                                                    Taken on {new Date(quiz.createdAt).toLocaleDateString()}\n                                                </p>\n                                                <span className={`badge ${getDifficultyBadge(quiz.difficulty)}`}\n                                                        style={{\n                                                            display: 'inline-flex',\n                                                            alignItems: 'center',\n                                                            justifyContent: 'center',\n                                                            height: '100%',\n                                                          }}\n                                                >\n                                                    {quiz.difficulty || 'N/A'}\n                                                </span>\n                                        </div>\n                                        <div className=\"d-flex justify-content-between mt-2\">\n                                            <span className=\"badge bg-success\">\n                                                {quiz.score}/{quiz.totalQuestions}\n                                            </span>\n                                            <span className=\"text-end small\">\n                                                Accuracy: {Math.round((quiz.score / quiz.totalQuestions) * 100)}%\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default MyQuizzes;","//src/pages/ExplanationPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport QuizExplanations from '../components/QuizExplanations.js';\n\nconst ExplanationPage = () => {\n    const { explanationID } = useParams();\n    const navigate = useNavigate();\n    const [quizData, setQuizData] = useState([]);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [topic, setTopic] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    const userID = localStorage.getItem(\"userID\");\n\n    useEffect(() => {\n        console.log(\"INSIDE Explanation Page\");\n        const fetchExplanationData = async () => {\n        try {\n            const res = await axios.get(`https://quiz-backend-5rjf.onrender.com/api/explanations/${userID}/${explanationID}`);\n            setQuizData(res.data.questions.quizData);\n            setUserAnswers(res.data.questions.userAnswers);\n            setTopic(res.data.title);\n            console.log(\"Topic: \", res.data.title);\n\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching explanation data:\", err);\n            setLoading(false);\n        }\n        };\n\n        fetchExplanationData();\n    }, [userID, explanationID]);\n\n    const handleRetake = () => {\n        //navigate(`/quiz/${quizID}`); // or wherever your retake route is\n    };\n\n    if (loading) return <p className=\"text-white\">Loading explanations...</p>;\n    if (!quizData.length) return <p className=\"text-danger\">No explanations found.</p>;\n\n    return (\n        <div className=\"container text-white mt-4 mb-4 p-4 rounded\" style={{backgroundColor: \"#1a1a1a\"}} >\n            <h1 className=\"text-center mb-4\" style={{ color: '#28a745' }}>{topic} Quiz</h1>\n                <QuizExplanations\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    onRetake={handleRetake}\n                    navigate={navigate}\n                    readOnly={true}\n                />\n        </div>\n    );\n};\n\nexport default ExplanationPage;\n","// src/pages/AttemptPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst BASE_URL = \"https://quiz-backend-5rjf.onrender.com\";\n\nconst AttemptPage = () => {\n  const { quizID } = useParams();\n  const userID = localStorage.getItem(\"userID\");\n  const [attempts, setAttempts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchAttempts = async () => {\n      try {\n        let res;\n        if(quizID) {\n          res = await axios.get(`${BASE_URL}/api/result/attempts/${userID}/${quizID}`);\n        } else {\n          res = await axios.get(`${BASE_URL}/api/result/attempts/${userID}`);\n        }\n        setAttempts(res.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching attempts:\", err);\n        setError(\"Failed to load attempts.\");\n        setLoading(false);\n      }\n    };\n\n    fetchAttempts();\n  }, [quizID, userID]);\n\n  const handleDelete = async (attemptID) => {\n    if (!window.confirm(\"Are you sure you want to delete this attempt?\")) return;\n    console.log(\"Attempt ID: \", attemptID);\n  \n    try {\n      await axios.delete(`${BASE_URL}/api/delete/${attemptID}`);\n      setAttempts((prev) => prev.filter((a) => a.attemptID !== attemptID));\n    } catch (err) {\n      console.error(\"Failed to delete attempt:\", err);\n      alert(\"Something went wrong.\");\n    }\n };\n\n const onViewExplanations = (explanationID) => {\n    navigate(`/explanations/${explanationID}`);\n };\n\n  if (loading) return <p className=\"text-white\">Loading attempts...</p>;\n  if (error) return <p className=\"text-danger\">{error}</p>;\n\n  return (\n    <div className=\"container pt-4 pb-4\">\n      <div className=\"card text-white rounded-4 shadow-sm p-4\" style={{ backgroundColor: '#1a1a1a' }}>\n        <h2 className=\"mb-4 text-center\" style={{ color: '#28a745' }}>Past Attempts</h2>\n        {attempts.map((attempt, index) => (\n            <div\n                key={index}\n                className=\"d-flex \"\n            >\n                <div\n                    className=\"list-group-item bg- d-flex justify-content-between align-items-center text-white mb-2 rounded flex-grow-1\"\n                    style={{\n                        backgroundColor: '#212529', // Bootstrap bg-dark color\n                        transition: 'background-color 0.3s',\n                        cursor: 'pointer',\n                    }}\n                    onMouseOver={(e) => e.currentTarget.classList.add('bg-primary')}\n                    onMouseOut={(e) => e.currentTarget.classList.remove('bg-primary')}\n                >\n                    <div\n                        className=\"d-flex align-items-center\"\n                        style={{ cursor: 'pointer', flexGrow: 1 }}\n                        onClick={() => onViewExplanations(attempt.explanationID)}\n                    >\n                        <div className='p-2'>\n                            <strong>{attempt.title} Quiz - Attempt #{index + 1}</strong>\n                            <div>\n                            <small>\n                                Taken on {new Date(attempt.createdAt).toLocaleString()}\n                            </small>\n                            </div>\n                        </div>\n                    </div>\n            \n                    {/* Score button moved to the right side */}\n                    <div className=\"d-flex align-items-center me-3\">\n                        <span className=\"badge bg-primary\">\n                            {attempt.score}/{attempt.totalQuestions} (\n                            {Math.round((attempt.score / attempt.totalQuestions) * 100)}%)\n                        </span>\n                    </div>\n                </div>\n                <div\n                    className=\"d-flex justify-content-center align-items-center rounded\"\n                    style={{\n                        backgroundColor: '#212529', // bg-danger\n                        width: '36px',\n                        height: '65px',\n                        cursor: 'pointer',\n                        transition: 'background-color 0.3s',\n                    }}\n                    onClick={() => handleDelete(attempt.attemptID)}\n                    onMouseOver={(e) => (e.currentTarget.style.backgroundColor = '#dc3545')} // bg-warning\n                    onMouseOut={(e) => (e.currentTarget.style.backgroundColor = '#212529')}  // bg-danger\n                    >\n                    <i className=\"bi bi-trash text-white\"></i>\n                </div>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AttemptPage;\n","// src/components/RetakeQuiz.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RetakeQuiz = () => {\n    const { quizID } = useParams();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            const BASE_URL = \"https://quiz-backend-5rjf.onrender.com\";\n            try {\n                const response = await axios.get(`${BASE_URL}/api/quiz/questions/${quizID}`);\n                const topic = response.data.title;\n                const questions = response.data.questions;\n                const difficulty = response.data.difficulty;\n\n                console.log(\"Topic Quiz: \", topic);\n    \n                setLoading(false);\n    \n                navigate('/take-quiz', {\n                    state: {\n                      questions,\n                      topic,\n                      difficulty,\n                      quizID,\n                    },\n            \n                });\n                  \n            } catch (err) {\n                setError('Failed to fetch quiz questions');\n                setLoading(false);\n            }\n        };\n    \n        fetchQuestions();\n    }, [quizID, navigate]);\n    \n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p className=\"text-danger\">{error}</p>;\n\n    return null; // Because navigate will redirect the user\n};\n\nexport default RetakeQuiz;\n","// App.js\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout\";\nimport TakeQuiz from \"./pages/TakeQuiz\";\nimport Profile from \"./pages/Profile\";\nimport QuizGenerator from \"./pages/QuizGenerator\";\nimport MyQuizzes from \"./pages/MyQuizzes\";\nimport ExplanationPage from './pages/ExplanationPage';\nimport AttemptPage from './pages/AttemptPage';\nimport RetakeQuiz from './components/RetakeQuiz'\nimport QuizSelection from \"./components/QuizSelection\";\n\nfunction App() {\n  /*const isLogin = localStorage.getItem(\"isLogin\") === \"true\";*/\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Home />} /> \n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/QuizSelection\" element={<QuizSelection />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/take-quiz\" element={<TakeQuiz />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/my-quizzes\" element={<MyQuizzes />} />\n          <Route path=\"/quiz-generator/:type\" element={<QuizGenerator />} />\n          <Route path=\"/attempts/:quizID\" element={<AttemptPage />} />\n          <Route path=\"/attempts\" element={<AttemptPage />} />\n          <Route path=\"/retake-quiz/:quizID\" element={<RetakeQuiz />} />\n          <Route path=\"/explanations/:explanationID\" element={<ExplanationPage />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './components/reportWebVitals';\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </GoogleOAuthProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}