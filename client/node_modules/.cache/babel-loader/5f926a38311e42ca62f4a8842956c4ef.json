{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/Explanation.js\";\n// src/pages/Explanation.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport QuizExplanations from '../QuizExplanations';\nconst Explanation = () => {\n  const {\n    quizID\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchExplanationData = async () => {\n      try {\n        const res = await axios.get(`/api/explanations/${quizID}`);\n        setQuizData(res.data.questions); // assuming response has questions array\n        setUserAnswers(res.data.userAnswers); // assuming it's returned too\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching explanation data:\", err);\n        setLoading(false);\n      }\n    };\n    fetchExplanationData();\n  }, [quizID]);\n  const handleRetake = () => {\n    navigate(`/quiz/${quizID}`); // or wherever your retake route is\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading explanations...\");\n  if (!quizData.length) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }\n  }, \"No explanations found.\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container pt-4 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(QuizExplanations, {\n    quizData: quizData,\n    userAnswers: userAnswers,\n    onRetake: handleRetake,\n    navigate: navigate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Explanation;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","QuizExplanations","Explanation","quizID","navigate","quizData","setQuizData","userAnswers","setUserAnswers","loading","setLoading","fetchExplanationData","res","get","data","questions","err","console","error","handleRetake","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","onRetake"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/Explanation.js"],"sourcesContent":["// src/pages/Explanation.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport QuizExplanations from '../QuizExplanations';\n\nconst Explanation = () => {\n  const { quizID } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchExplanationData = async () => {\n      try {\n        const res = await axios.get(`/api/explanations/${quizID}`);\n        setQuizData(res.data.questions); // assuming response has questions array\n        setUserAnswers(res.data.userAnswers); // assuming it's returned too\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching explanation data:\", err);\n        setLoading(false);\n      }\n    };\n\n    fetchExplanationData();\n  }, [quizID]);\n\n  const handleRetake = () => {\n    navigate(`/quiz/${quizID}`); // or wherever your retake route is\n  };\n\n  if (loading) return <p className=\"text-white\">Loading explanations...</p>;\n  if (!quizData.length) return <p className=\"text-danger\">No explanations found.</p>;\n\n  return (\n    <div className=\"container pt-4 pb-4\">\n      <QuizExplanations\n        quizData={quizData}\n        userAnswers={userAnswers}\n        onRetake={handleRetake}\n        navigate={navigate}\n      />\n    </div>\n  );\n};\n\nexport default Explanation;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,qBAAqB;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qBAAqBV,MAAM,EAAE,CAAC;QAC1DG,WAAW,CAACM,GAAG,CAACE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;QACjCP,cAAc,CAACI,GAAG,CAACE,IAAI,CAACP,WAAW,CAAC,CAAC,CAAC;QACtCG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;QACtDN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzBf,QAAQ,CAAC,SAASD,MAAM,EAAE,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,IAAIM,OAAO,EAAE,oBAAOd,KAAA,CAAAyB,aAAA;IAAGC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,yBAA0B,CAAC;EACzE,IAAI,CAACtB,QAAQ,CAACuB,MAAM,EAAE,oBAAOjC,KAAA,CAAAyB,aAAA;IAAGC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAAyB,CAAC;EAElF,oBACEhC,KAAA,CAAAyB,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClChC,KAAA,CAAAyB,aAAA,CAACnB,gBAAgB;IACfI,QAAQ,EAAEA,QAAS;IACnBE,WAAW,EAAEA,WAAY;IACzBsB,QAAQ,EAAEV,YAAa;IACvBf,QAAQ,EAAEA,QAAS;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpB,CACE,CAAC;AAEV,CAAC;AAED,eAAezB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}