{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js\";\nimport axios from 'axios';\nimport React, { useEffect, useRef } from 'react';\nconst QuizResult = ({\n  topic,\n  score,\n  quizID,\n  total,\n  attempts,\n  onTryAgain,\n  difficulty,\n  onShowExplanations,\n  navigate,\n  quizData,\n  userAnswers\n}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n  //const [hasSaved, setHasSaved] = useState(false);\n\n  const hasAttemptedSave = useRef(false);\n  const hasSavedExplanations = useRef(false);\n\n  // Save explanations\n  useEffect(() => {\n    const saveExplanations = async () => {\n      if (!userID || !quizData.length || hasSavedExplanations.current) return;\n      try {\n        const explanationPayload = quizData.map((q, index) => ({\n          userID,\n          question: q.question,\n          options: q.options,\n          correctAnswer: q.correctAnswer,\n          userAnswer: userAnswers[index],\n          explanation: q.explanation\n        }));\n        const response = await axios.post('https://localhost:3001/api/explanations/save', explanationPayload);\n        const explanationID = response.explanationID;\n        console.log(\"Explanation ID: \", explanationID);\n        hasSavedExplanations.current = true;\n\n        // You could pass these IDs somewhere if needed\n      } catch (error) {\n        console.error(\"Failed to save explanations:\", error);\n      }\n    };\n    saveExplanations();\n  }, [userID, quizData, userAnswers]);\n\n  // Save quiz result\n  useEffect(() => {\n    const saveResults = async () => {\n      try {\n        const payload = {\n          userID,\n          topic,\n          score,\n          total,\n          attempts,\n          difficulty,\n          quizID\n        };\n        console.log(\"INSIDE Quiz Result quizID: \", quizID);\n        const res = await axios.post(\"https://localhost:3001/api/result/save-results\", payload);\n        if (res.status === 200) {\n          // Successfully saved\n        }\n      } catch (err) {\n        console.error(\"Error saving quiz:\", err);\n        alert(\"Failed to save quiz.\");\n      }\n    };\n    if (isLogin && !hasAttemptedSave.current) {\n      hasAttemptedSave.current = true;\n      saveResults();\n    }\n  }, [isLogin, userID, topic, score, total, attempts, difficulty, quizID]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-white border\",\n    style: {\n      backgroundColor: \"#1a1a1a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Your Score: \", score, \" out of \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"You got \", Math.round(score / total * 100), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, isLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"You've attempted this quiz \", attempts, \" times. Would you like to see the explanations or try again?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info me-2\",\n    onClick: onShowExplanations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Show Explanations\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-2\",\n    onClick: onTryAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Try Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary me-2\",\n    onClick: () => navigate('/quiz-generator/ai'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn me-2 btn-danger\",\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Exit\"))));\n};\nexport default QuizResult;","map":{"version":3,"names":["axios","React","useEffect","useRef","QuizResult","topic","score","quizID","total","attempts","onTryAgain","difficulty","onShowExplanations","navigate","quizData","userAnswers","isLogin","localStorage","getItem","userID","hasAttemptedSave","hasSavedExplanations","saveExplanations","length","current","explanationPayload","map","q","index","question","options","correctAnswer","userAnswer","explanation","response","post","explanationID","console","log","error","saveResults","payload","res","status","err","alert","createElement","className","style","backgroundColor","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","Fragment","onClick"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js"],"sourcesContent":["import axios from 'axios';\nimport React, {useEffect, useRef} from 'react';\n\nconst QuizResult = ({topic, score, quizID, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate, quizData, userAnswers}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n    //const [hasSaved, setHasSaved] = useState(false);\n\n    const hasAttemptedSave = useRef(false);\n    const hasSavedExplanations = useRef(false);\n\n    // Save explanations\n    useEffect(() => {\n        const saveExplanations = async () => {\n        if (!userID || !quizData.length || hasSavedExplanations.current) return;\n\n        try {\n            const explanationPayload = quizData.map((q, index) => ({\n            userID,\n            question: q.question,\n            options: q.options,\n            correctAnswer: q.correctAnswer,\n            userAnswer: userAnswers[index],\n            explanation: q.explanation,\n            }));\n\n            const response = await axios.post('https://localhost:3001/api/explanations/save', explanationPayload);\n            const explanationID = response.explanationID;\n            console.log(\"Explanation ID: \", explanationID);\n\n            hasSavedExplanations.current = true;\n\n            // You could pass these IDs somewhere if needed\n        } catch (error) {\n            console.error(\"Failed to save explanations:\", error);\n        }\n        };\n\n        saveExplanations();\n    }, [userID, quizData, userAnswers]);\n\n    // Save quiz result\n    useEffect(() => {\n        const saveResults = async () => {\n        try {\n            const payload = {\n            userID,\n            topic,\n            score,\n            total,\n            attempts,\n            difficulty,\n            quizID,\n            };\n            console.log(\"INSIDE Quiz Result quizID: \", quizID);\n\n            const res = await axios.post(\"https://localhost:3001/api/result/save-results\", payload);\n            if (res.status === 200) {\n            // Successfully saved\n            }\n        } catch (err) {\n            console.error(\"Error saving quiz:\", err);\n            alert(\"Failed to save quiz.\");\n        }\n        };\n\n        if (isLogin && !hasAttemptedSave.current) {\n        hasAttemptedSave.current = true;\n        saveResults();\n        }\n    }, [isLogin, userID, topic, score, total, attempts, difficulty, quizID]);\n\n      \n\n    return (\n        <div className=\"card text-white border\" style={{backgroundColor: \"#1a1a1a\",}} >\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate('/quiz-generator/ai')}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}