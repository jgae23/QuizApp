{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js\";\nimport axios from 'axios';\nimport React, { useEffect, useRef } from 'react';\nconst QuizResult = ({\n  topic,\n  score,\n  quizID,\n  total,\n  attempts,\n  onTryAgain,\n  difficulty,\n  onShowExplanations,\n  navigate,\n  quizData,\n  userAnswers\n}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n  //const [explanationID, setExplanationID] = useState(null);\n  //const [hasSaved, setHasSaved] = useState(false);\n\n  const hasAttemptedSave = useRef(false);\n  //const hasSavedExplanations = useRef(false);\n\n  // Save explanations\n  useEffect(() => {\n    const saveEverything = async () => {\n      if (!isLogin || !userID || !quizData.length || hasAttemptedSave.current) return;\n      hasAttemptedSave.current = true;\n      try {\n        // Step 1: Save explanations\n        const explanationResponse = await axios.post('https://localhost:3001/api/explanations/save', {\n          userID,\n          explanationData: {\n            quizData,\n            userAnswers\n          }\n        });\n        const explanationID = explanationResponse.data.explanationID;\n        console.log(\"Explanation saved with ID:\", explanationID);\n\n        // Step 2: Save quiz results *after* explanation is saved\n        const resultPayload = {\n          userID,\n          topic,\n          score,\n          total,\n          attempts,\n          difficulty,\n          quizID,\n          explanationID\n        };\n        const resultRes = await axios.post(\"https://localhost:3001/api/result/save-results\", resultPayload);\n        if (resultRes.status === 200) {\n          console.log(\"Saved results successfully\");\n        }\n      } catch (err) {\n        console.error(\"Failed to save quiz or explanations:\", err);\n      }\n    };\n    saveEverything();\n  }, [isLogin, userID, quizData, userAnswers, attempts, difficulty, quizID, score, topic, total]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-white border\",\n    style: {\n      backgroundColor: \"#1a1a1a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Your Score: \", score, \" out of \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"You got \", Math.round(score / total * 100), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, isLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"You've attempted this quiz \", attempts, \" times. Would you like to see the explanations or try again?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info me-2\",\n    onClick: onShowExplanations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Show Explanations\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-2\",\n    onClick: onTryAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Try Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary me-2\",\n    onClick: () => navigate('/quiz-generator/ai'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn me-2 btn-danger\",\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Exit\"))));\n};\nexport default QuizResult;","map":{"version":3,"names":["axios","React","useEffect","useRef","QuizResult","topic","score","quizID","total","attempts","onTryAgain","difficulty","onShowExplanations","navigate","quizData","userAnswers","isLogin","localStorage","getItem","userID","hasAttemptedSave","saveEverything","length","current","explanationResponse","post","explanationData","explanationID","data","console","log","resultPayload","resultRes","status","err","error","createElement","className","style","backgroundColor","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","Fragment","onClick"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js"],"sourcesContent":["import axios from 'axios';\nimport React, {useEffect, useRef} from 'react';\n\nconst QuizResult = ({topic, score, quizID, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate, quizData, userAnswers}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n    //const [explanationID, setExplanationID] = useState(null);\n    //const [hasSaved, setHasSaved] = useState(false);\n\n    const hasAttemptedSave = useRef(false);\n    //const hasSavedExplanations = useRef(false);\n\n    // Save explanations\n    useEffect(() => {\n        const saveEverything = async () => {\n          if (!isLogin || !userID || !quizData.length || hasAttemptedSave.current) return;\n\n          hasAttemptedSave.current = true;\n      \n          try {\n            \n            // Step 1: Save explanations\n            const explanationResponse = await axios.post('https://localhost:3001/api/explanations/save', {\n              userID,\n              explanationData: {\n                quizData,\n                userAnswers\n              }\n            });\n      \n            const explanationID = explanationResponse.data.explanationID;\n            console.log(\"Explanation saved with ID:\", explanationID);\n            \n      \n            // Step 2: Save quiz results *after* explanation is saved\n            const resultPayload = {\n              userID,\n              topic,\n              score,\n              total,\n              attempts,\n              difficulty,\n              quizID,\n              explanationID,\n            };\n      \n            const resultRes = await axios.post(\"https://localhost:3001/api/result/save-results\", resultPayload);\n            if (resultRes.status === 200) {\n              console.log(\"Saved results successfully\");\n            }\n      \n          } catch (err) {\n            console.error(\"Failed to save quiz or explanations:\", err);\n          }\n        };\n      \n        saveEverything();\n    }, [isLogin, userID, quizData, userAnswers, attempts, difficulty, quizID, score, topic, total]);\n\n    return (\n        <div className=\"card text-white border\" style={{backgroundColor: \"#1a1a1a\",}} >\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate('/quiz-generator/ai')}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}