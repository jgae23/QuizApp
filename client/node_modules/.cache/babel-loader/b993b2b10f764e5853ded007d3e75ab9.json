{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/Signup.js\";\n// Signup.js\nimport React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nconst Signup = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSignup = async event => {\n    event.preventDefault(); // Prevent page refresh\n\n    try {\n      const response = await fetch(\"https://localhost:3001/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userName,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem(\"isLogin\", \"true\");\n        localStorage.setItem(\"userName\", data.userName);\n        localStorage.setItem(\"userID\", String(data.userID));\n        console.log(\"User ID: \", data.userID);\n        navigate(\"/\");\n      } else {\n        alert(data.message || \"Signup failed\");\n      }\n    } catch (err) {\n      console.error(\"Signup error:\", err);\n      alert(\"Signup failed. Try again later.\");\n    }\n\n    // Reset form fields after submission\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  const handleGoogleSuccess = credentialResponse => {\n    const token = credentialResponse.credential;\n    fetch(\"https://localhost:3001/api/auth/google\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        credential: token\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"Server response:\", data);\n      localStorage.setItem(\"isLogin\", \"true\");\n      localStorage.setItem(\"userName\", data.user.username);\n      localStorage.setItem(\"userID\", String(data.user.userID));\n      navigate(\"/\");\n      // Store JWT or user data if needed\n    }).catch(err => console.error(\"Auth error\", err));\n    console.log(\"Google credential:\", credentialResponse);\n    console.log(\"Decoded token:\", jwtDecode(token));\n  };\n  const handleGoogleError = () => {\n    console.log(\"Google login failed\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AuthForm, {\n    onSubmit: handleSignup,\n    isLogin: false,\n    userName: userName,\n    setUserName: setUserName,\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    showGoogleButton: true,\n    onGoogleSuccess: handleGoogleSuccess,\n    onGoogleError: handleGoogleError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Signup;","map":{"version":3,"names":["React","useState","AuthForm","useNavigate","jwtDecode","Signup","userName","setUserName","email","setEmail","password","setPassword","navigate","handleSignup","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","String","userID","console","log","alert","message","err","error","handleGoogleSuccess","credentialResponse","token","credential","then","res","user","username","catch","handleGoogleError","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isLogin","showGoogleButton","onGoogleSuccess","onGoogleError"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/Signup.js"],"sourcesContent":["// Signup.js\nimport React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst Signup = () => {\n    const [userName, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n  \n    const navigate = useNavigate();\n\n    const handleSignup = async (event) => {\n        event.preventDefault(); // Prevent page refresh\n\n        try {\n            const response = await fetch(\"https://localhost:3001/api/auth/signup\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ userName, email, password }),\n            });\n    \n            const data = await response.json();\n\n            if (response.ok) {\n                localStorage.setItem(\"isLogin\", \"true\");\n                localStorage.setItem(\"userName\", data.userName);\n                localStorage.setItem(\"userID\", String(data.userID));\n                console.log(\"User ID: \", data.userID);\n\n                navigate(\"/\");\n            } else {\n                alert(data.message || \"Signup failed\");\n            }\n        } catch (err) {\n            console.error(\"Signup error:\", err);\n            alert(\"Signup failed. Try again later.\");\n        }\n\n        // Reset form fields after submission\n        setUserName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n    };\n\n    const handleGoogleSuccess = (credentialResponse) => {\n        const token = credentialResponse.credential;\n\n        fetch(\"https://localhost:3001/api/auth/google\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ credential: token }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(\"Server response:\", data);\n                localStorage.setItem(\"isLogin\", \"true\");\n                localStorage.setItem(\"userName\", data.user.username);\n                localStorage.setItem(\"userID\", String(data.user.userID));\n                navigate(\"/\");\n                // Store JWT or user data if needed\n            })\n            .catch(err => console.error(\"Auth error\", err));\n\n        console.log(\"Google credential:\", credentialResponse);\n        console.log(\"Decoded token:\", jwtDecode(token));\n    };\n    \n    const handleGoogleError = () => {\n        console.log(\"Google login failed\");\n    };\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\">\n            <AuthForm\n                onSubmit={handleSignup}\n                isLogin={false}\n                userName={userName}\n                setUserName={setUserName}\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                showGoogleButton={true}\n                onGoogleSuccess={handleGoogleSuccess}\n                onGoogleError={handleGoogleError}\n            />\n        </div>\n    );\n\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}