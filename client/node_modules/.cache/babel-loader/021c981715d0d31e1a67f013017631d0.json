{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/Explanation.js\";\n// src/pages/Explanation.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport QuizExplanations from '../components/QuizExplanations';\n\n// Separate components for loading and error states\nconst LoadingView = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-white\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 27\n  }\n}, \"Loading explanations...\");\nconst ErrorView = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }\n}, \"No explanations found.\");\nconst Explanation = () => {\n  const {\n    explanationID\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userID = localStorage.getItem(\"userID\");\n  useEffect(() => {\n    const fetchExplanationData = async () => {\n      try {\n        const res = await axios.get(`/api/explanations/${userID}/${explanationID}`);\n        setQuizData(res.data.questions.quizData);\n        setUserAnswers(res.data.questions.userAnswers);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching explanation data:\", err);\n        setLoading(false);\n      }\n    };\n    fetchExplanationData();\n  }, [userID, explanationID]);\n  const handleRetake = () => {\n    //navigate(`/quiz/${quizID}`); // or wherever your retake route is\n  };\n\n  // Conditional rendering using components\n  if (loading) return /*#__PURE__*/React.createElement(LoadingView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  });\n  if (!quizData.length) return /*#__PURE__*/React.createElement(ErrorView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container pt-4 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(QuizExplanations, {\n    quizData: quizData,\n    userAnswers: userAnswers,\n    onRetake: handleRetake,\n    navigate: navigate,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Explanation;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","QuizExplanations","LoadingView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ErrorView","Explanation","explanationID","navigate","quizData","setQuizData","userAnswers","setUserAnswers","loading","setLoading","userID","localStorage","getItem","fetchExplanationData","res","get","data","questions","err","console","error","handleRetake","length","onRetake","readOnly"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/Explanation.js"],"sourcesContent":["// src/pages/Explanation.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport QuizExplanations from '../components/QuizExplanations';\n\n// Separate components for loading and error states\nconst LoadingView = () => <p className=\"text-white\">Loading explanations...</p>;\nconst ErrorView = () => <p className=\"text-danger\">No explanations found.</p>;\n\nconst Explanation = () => {\n  const { explanationID } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userID = localStorage.getItem(\"userID\");\n\n  useEffect(() => {\n    const fetchExplanationData = async () => {\n      try {\n        const res = await axios.get(`/api/explanations/${userID}/${explanationID}`);\n        setQuizData(res.data.questions.quizData);\n        setUserAnswers(res.data.questions.userAnswers);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching explanation data:\", err);\n        setLoading(false);\n      }\n    };\n    fetchExplanationData();\n  }, [userID, explanationID]);\n\n  const handleRetake = () => {\n    //navigate(`/quiz/${quizID}`); // or wherever your retake route is\n  };\n\n  // Conditional rendering using components\n  if (loading) return <LoadingView />;\n  if (!quizData.length) return <ErrorView />;\n\n  return (\n    <div className=\"container pt-4 pb-4\">\n      <QuizExplanations\n        quizData={quizData}\n        userAnswers={userAnswers}\n        onRetake={handleRetake}\n        navigate={navigate}\n        readOnly={true}\n      />\n    </div>\n  );\n};\n\nexport default Explanation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}