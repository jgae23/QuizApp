{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/QuizGenerator.js\";\n// pages/GenerateQuiz.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst QuizGenerator = () => {\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const quizTypeFromHome = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.type;\n  const [quizType, setQuizType] = useState(quizTypeFromHome);\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const handleGenerateQuiz = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (quizType === 'ai') {\n        response = await axios.post('https://localhost:3001/api/ai-quiz/generate', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n      } else {\n        response = await axios.post('https://localhost:3001/api/trivia', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n      }\n      navigate('/take-quiz', {\n        state: {\n          questions: quizData,\n          topic: topic,\n          difficulty: difficulty\n        }\n      });\n    } catch (err) {\n      setError('Error connecting to server. Please try again later.');\n      console.error('Error generating quiz:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ai-quiz-generator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"AI-Powered Quiz Generator\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleGenerateQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"topic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"What do you want to get tested on?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"topic\",\n    value: topic,\n    onChange: e => setTopic(e.target.value),\n    placeholder: \"e.g., Artificial Intelligence\",\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numQuestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Number of Questions:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"numQuestions\",\n    value: numberOfQuestions,\n    onChange: e => setNumberOfQuestions(Number(e.target.value)),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"10\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"difficulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Difficulty Level:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"difficulty\",\n    value: difficulty,\n    onChange: e => setDifficulty(e.target.value),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"easy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Hard\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, isLoading ? 'Generating...' : 'Generate Quiz')));\n};\nexport default QuizGenerator;","map":{"version":3,"names":["React","useState","useLocation","axios","useNavigate","QuizGenerator","_location$state","navigate","location","quizTypeFromHome","state","type","quizType","setQuizType","topic","setTopic","numberOfQuestions","setNumberOfQuestions","difficulty","setDifficulty","handleGenerateQuiz","e","preventDefault","setIsLoading","setError","response","post","data","success","setQuizData","questions","quizData","err","console","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","placeholder","required","Number","disabled","isLoading"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/QuizGenerator.js"],"sourcesContent":["// pages/GenerateQuiz.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst QuizGenerator = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const quizTypeFromHome = location.state?.type;\n\n  const [quizType, setQuizType] = useState(quizTypeFromHome);\n\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n\n\n  const handleGenerateQuiz = async (e) => {\n    e.preventDefault();\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      let response;\n      if (quizType === 'ai') {\n        response = await axios.post('https://localhost:3001/api/ai-quiz/generate', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n\n      } else {\n        response = await axios.post('https://localhost:3001/api/trivia', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n      }\n\n      navigate('/take-quiz', { \n        state: { \n          questions: quizData,\n          topic: topic,\n          difficulty: difficulty\n        } \n      });\n    \n    } catch (err) {\n      setError('Error connecting to server. Please try again later.');\n      console.error('Error generating quiz:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"ai-quiz-generator\">\n      <h2>AI-Powered Quiz Generator</h2>\n      <form onSubmit={handleGenerateQuiz}>\n        <div className=\"form-group\">\n          <label htmlFor=\"topic\">What do you want to get tested on?</label>\n          <input\n            type=\"text\"\n            id=\"topic\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            placeholder=\"e.g., Artificial Intelligence\"\n            required\n            className=\"form-control\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"numQuestions\">Number of Questions:</label>\n          <select \n            id=\"numQuestions\" \n            value={numberOfQuestions}\n            onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"difficulty\">Difficulty Level:</label>\n          <select \n            id=\"difficulty\"\n            value={difficulty}\n            onChange={(e) => setDifficulty(e.target.value)}\n            className=\"form-control\"\n          >\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n        \n        <button \n          type=\"submit\"\n          disabled={isLoading}\n          className=\"btn btn-primary\"\n        >\n          {isLoading ? 'Generating...' : 'Generate Quiz'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default QuizGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}