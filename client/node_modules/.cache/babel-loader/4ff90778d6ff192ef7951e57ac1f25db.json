{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/TakeQuiz.js\";\n// pages/TakeQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport QuestionCard from './QuestionCard';\nimport QuizResult from './QuizResult';\nimport QuizExplanations from './QuizExplanations';\nconst TakeQuiz = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState([]);\n  const [quizTopic, setQuizTopic] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n  const [showExplanations, setShowExplanations] = useState(false);\n  const [totalAttempts, setTotalAttempts] = useState(0);\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.questions) {\n      setQuizData(location.state.questions);\n      setQuizTopic(location.state.topic || 'Quiz');\n      // Initialize userAnswers array with empty strings\n      setUserAnswers(new Array(location.state.questions.length).fill(''));\n    } else {\n      navigate('/quiz-generator/ai');\n    }\n  }, [location, navigate]);\n  const handleNextQuestion = () => {\n    // Save the user's answer for the current question\n    const newUserAnswers = [...userAnswers];\n    newUserAnswers[currentQuestion] = selectedAnswer;\n    setUserAnswers(newUserAnswers);\n\n    // Check if the answer is correct and update score\n    if (selectedAnswer === quizData[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n\n    // Move to next question or show results\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedAnswer('');\n    } else {\n      setShowResults(true);\n      // Increment total attempts when quiz is completed\n      setTotalAttempts(totalAttempts + 1);\n    }\n  };\n  const handleRetakeQuiz = () => {\n    setCurrentQuestion(0);\n    setSelectedAnswer('');\n    setScore(0);\n    setShowResults(true);\n    setShowExplanations(false);\n    // Clear user answers\n    setUserAnswers(new Array(quizData.length).fill(''));\n    // Reset to review page when retaking\n    setShowResults(false);\n  };\n  if (!quizData.length) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 34\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container bg-dark text-white mt-4 p-4 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, quizTopic, \" Quiz\"), !showResults ? /*#__PURE__*/React.createElement(QuestionCard, {\n    question: quizData[currentQuestion],\n    current: currentQuestion,\n    total: quizData.length,\n    selectedAnswer: selectedAnswer,\n    onSelect: setSelectedAnswer,\n    onNext: handleNextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }) : !showExplanations ? /*#__PURE__*/React.createElement(QuizResult, {\n    score: score,\n    total: quizData.length,\n    attempts: totalAttempts,\n    onTryAgain: () => setShowResults(false),\n    onRetake: handleRetakeQuiz,\n    onShowExplanations: () => setShowExplanations(true),\n    navigate: navigate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(QuizExplanations, {\n    quizData: quizData,\n    userAnswers: userAnswers,\n    onRetake: handleRetakeQuiz,\n    navigate: navigate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }));\n};","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","QuestionCard","QuizResult","QuizExplanations","TakeQuiz","location","navigate","quizData","setQuizData","quizTopic","setQuizTopic","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","userAnswers","setUserAnswers","showResults","setShowResults","showExplanations","setShowExplanations","totalAttempts","setTotalAttempts","_location$state","state","questions","topic","Array","length","fill","handleNextQuestion","newUserAnswers","correctAnswer","handleRetakeQuiz","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","question","current","total","onSelect","onNext","attempts","onTryAgain","onRetake","onShowExplanations"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/TakeQuiz.js"],"sourcesContent":["// pages/TakeQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport QuestionCard from './QuestionCard';\nimport QuizResult from './QuizResult';\nimport QuizExplanations from './QuizExplanations';\n\nconst TakeQuiz = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [quizData, setQuizData] = useState([]);\n    const [quizTopic, setQuizTopic] = useState('');\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedAnswer, setSelectedAnswer] = useState('');\n    const [score, setScore] = useState(0);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [showResults, setShowResults] = useState(false);\n    const [showExplanations, setShowExplanations] = useState(false);\n    const [totalAttempts, setTotalAttempts] = useState(0);\n\n    useEffect(() => {\n        if (location.state?.questions) {\n            setQuizData(location.state.questions);\n            setQuizTopic(location.state.topic || 'Quiz');\n            // Initialize userAnswers array with empty strings\n            setUserAnswers(new Array(location.state.questions.length).fill(''));\n        } else {\n            navigate('/quiz-generator/ai');\n        }\n    }, [location, navigate]);\n\n    const handleNextQuestion = () => {\n        // Save the user's answer for the current question\n        const newUserAnswers = [...userAnswers];\n        newUserAnswers[currentQuestion] = selectedAnswer;\n        setUserAnswers(newUserAnswers);\n        \n        // Check if the answer is correct and update score\n        if (selectedAnswer === quizData[currentQuestion].correctAnswer) {\n          setScore(score + 1);\n        }\n        \n        // Move to next question or show results\n        if (currentQuestion < quizData.length - 1) {\n          setCurrentQuestion(currentQuestion + 1);\n          setSelectedAnswer('');\n        } else {\n          setShowResults(true);\n          // Increment total attempts when quiz is completed\n          setTotalAttempts(totalAttempts + 1);\n        }\n    };\n\n    const handleRetakeQuiz = () => {\n        setCurrentQuestion(0);\n        setSelectedAnswer('');\n        setScore(0);\n        setShowResults(true);\n        setShowExplanations(false);\n        // Clear user answers\n        setUserAnswers(new Array(quizData.length).fill(''));\n        // Reset to review page when retaking\n        setShowResults(false);\n    };\n\n    if (!quizData.length) return <div className=\"container mt-5 text-center\" >Loading...</div>;\n\n    return (\n        <div className=\"container bg-dark text-white mt-4 p-4 rounded\">\n            <h1 className=\"text-center mb-4\">{quizTopic} Quiz</h1>\n            {!showResults ? (\n                <QuestionCard\n                    question={quizData[currentQuestion]}\n                    current={currentQuestion}\n                    total={quizData.length}\n                    selectedAnswer={selectedAnswer}\n                    onSelect={setSelectedAnswer}\n                    onNext={handleNextQuestion}\n                />\n            ) : !showExplanations ? (\n                <QuizResult\n                    score={score}\n                    total={quizData.length}\n                    attempts={totalAttempts}\n                    onTryAgain={() => setShowResults(false)}\n                    onRetake={handleRetakeQuiz}\n                    onShowExplanations={() => setShowExplanations(true)}\n                    navigate={navigate}\n                />\n            ) : (\n                <QuizExplanations\n                    quizData={quizData}\n                    userAnswers={userAnswers}\n                    onRetake={handleRetakeQuiz}\n                    navigate={navigate}\n                />\n            )}\n        </div>\n    );\n    \n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAErDC,SAAS,CAAC,MAAM;IAAA,IAAA2B,eAAA;IACZ,KAAAA,eAAA,GAAIpB,QAAQ,CAACqB,KAAK,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,SAAS,EAAE;MAC3BnB,WAAW,CAACH,QAAQ,CAACqB,KAAK,CAACC,SAAS,CAAC;MACrCjB,YAAY,CAACL,QAAQ,CAACqB,KAAK,CAACE,KAAK,IAAI,MAAM,CAAC;MAC5C;MACAV,cAAc,CAAC,IAAIW,KAAK,CAACxB,QAAQ,CAACqB,KAAK,CAACC,SAAS,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvE,CAAC,MAAM;MACHzB,QAAQ,CAAC,oBAAoB,CAAC;IAClC;EACJ,CAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,MAAM0B,kBAAkB,GAAGA,CAAA,KAAM;IAC7B;IACA,MAAMC,cAAc,GAAG,CAAC,GAAGhB,WAAW,CAAC;IACvCgB,cAAc,CAACtB,eAAe,CAAC,GAAGE,cAAc;IAChDK,cAAc,CAACe,cAAc,CAAC;;IAE9B;IACA,IAAIpB,cAAc,KAAKN,QAAQ,CAACI,eAAe,CAAC,CAACuB,aAAa,EAAE;MAC9DlB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;;IAEA;IACA,IAAIJ,eAAe,GAAGJ,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;MACzClB,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;MACvCG,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,MAAM;MACLM,cAAc,CAAC,IAAI,CAAC;MACpB;MACAI,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;IACrC;EACJ,CAAC;EAED,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC3BvB,kBAAkB,CAAC,CAAC,CAAC;IACrBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,QAAQ,CAAC,CAAC,CAAC;IACXI,cAAc,CAAC,IAAI,CAAC;IACpBE,mBAAmB,CAAC,KAAK,CAAC;IAC1B;IACAJ,cAAc,CAAC,IAAIW,KAAK,CAACtB,QAAQ,CAACuB,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnD;IACAX,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,IAAI,CAACb,QAAQ,CAACuB,MAAM,EAAE,oBAAOlC,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,4BAA4B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE,YAAe,CAAC;EAE1F,oBACI/C,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,+CAA+C;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1D/C,KAAA,CAAAwC,aAAA;IAAIC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAElC,SAAS,EAAC,OAAS,CAAC,EACrD,CAACU,WAAW,gBACTvB,KAAA,CAAAwC,aAAA,CAACnC,YAAY;IACT2C,QAAQ,EAAErC,QAAQ,CAACI,eAAe,CAAE;IACpCkC,OAAO,EAAElC,eAAgB;IACzBmC,KAAK,EAAEvC,QAAQ,CAACuB,MAAO;IACvBjB,cAAc,EAAEA,cAAe;IAC/BkC,QAAQ,EAAEjC,iBAAkB;IAC5BkC,MAAM,EAAEhB,kBAAmB;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,GACF,CAACtB,gBAAgB,gBACjBzB,KAAA,CAAAwC,aAAA,CAAClC,UAAU;IACPa,KAAK,EAAEA,KAAM;IACb+B,KAAK,EAAEvC,QAAQ,CAACuB,MAAO;IACvBmB,QAAQ,EAAE1B,aAAc;IACxB2B,UAAU,EAAEA,CAAA,KAAM9B,cAAc,CAAC,KAAK,CAAE;IACxC+B,QAAQ,EAAEhB,gBAAiB;IAC3BiB,kBAAkB,EAAEA,CAAA,KAAM9B,mBAAmB,CAAC,IAAI,CAAE;IACpDhB,QAAQ,EAAEA,QAAS;IAAAgC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAAC,gBAEF/C,KAAA,CAAAwC,aAAA,CAACjC,gBAAgB;IACbI,QAAQ,EAAEA,QAAS;IACnBU,WAAW,EAAEA,WAAY;IACzBkC,QAAQ,EAAEhB,gBAAiB;IAC3B7B,QAAQ,EAAEA,QAAS;IAAAgC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAEJ,CAAC;AAGd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}