{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/QuizGenerator.js\";\n// pages/GenerateQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst QuizGenerator = () => {\n  var _location$state;\n  const location = useLocation();\n  const quizTypeFromHome = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.type;\n  const quizType = quizTypeFromHome;\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (quizData) {\n      navigate('/take-quiz', {\n        state: {\n          questions: quizData,\n          topic,\n          difficulty\n        }\n      });\n    }\n  }, [quizData, navigate, topic, difficulty]);\n  const handleGenerateQuiz = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (quizType === 'ai') {\n        response = await axios.post('https://localhost:3001/api/ai-quiz/generate', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n      } else {\n        response = await axios.post('https://localhost:3001/api/trivia', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n      }\n    } catch (err) {\n      setError('Error connecting to server. Please try again later.');\n      console.error('Error generating quiz:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ai-quiz-generator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"AI-Powered Quiz Generator\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleGenerateQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"topic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"What do you want to get tested on?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"topic\",\n    value: topic,\n    onChange: e => setTopic(e.target.value),\n    placeholder: \"e.g., Artificial Intelligence\",\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numQuestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Number of Questions:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"numQuestions\",\n    value: numberOfQuestions,\n    onChange: e => setNumberOfQuestions(Number(e.target.value)),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"10\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"difficulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Difficulty Level:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"difficulty\",\n    value: difficulty,\n    onChange: e => setDifficulty(e.target.value),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"easy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Hard\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, isLoading ? 'Generating...' : 'Generate Quiz')), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, error));\n};\nexport default QuizGenerator;","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","useNavigate","QuizGenerator","_location$state","location","quizTypeFromHome","state","type","quizType","topic","setTopic","numberOfQuestions","setNumberOfQuestions","difficulty","setDifficulty","isLoading","setIsLoading","error","setError","quizData","setQuizData","navigate","questions","handleGenerateQuiz","e","preventDefault","response","post","data","success","err","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","placeholder","required","Number","disabled"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/QuizGenerator.js"],"sourcesContent":["// pages/GenerateQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst QuizGenerator = () => {\n  \n  const location = useLocation();\n  const quizTypeFromHome = location.state?.type;\n\n  const quizType = quizTypeFromHome;\n\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (quizData) {\n      navigate('/take-quiz', {\n        state: {\n          questions: quizData,\n          topic,\n          difficulty,\n        },\n      });\n    }\n  }, [quizData, navigate, topic, difficulty]);\n  const handleGenerateQuiz = async (e) => {\n    e.preventDefault();\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      let response;\n      if (quizType === 'ai') {\n        response = await axios.post('https://localhost:3001/api/ai-quiz/generate', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n\n      } else {\n        response = await axios.post('https://localhost:3001/api/trivia', {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n      }\n      \n    \n    } catch (err) {\n      setError('Error connecting to server. Please try again later.');\n      console.error('Error generating quiz:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"ai-quiz-generator\">\n      <h2>AI-Powered Quiz Generator</h2>\n      <form onSubmit={handleGenerateQuiz}>\n        <div className=\"form-group\">\n          <label htmlFor=\"topic\">What do you want to get tested on?</label>\n          <input\n            type=\"text\"\n            id=\"topic\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            placeholder=\"e.g., Artificial Intelligence\"\n            required\n            className=\"form-control\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"numQuestions\">Number of Questions:</label>\n          <select \n            id=\"numQuestions\" \n            value={numberOfQuestions}\n            onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"difficulty\">Difficulty Level:</label>\n          <select \n            id=\"difficulty\"\n            value={difficulty}\n            onChange={(e) => setDifficulty(e.target.value)}\n            className=\"form-control\"\n          >\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n        \n        <button \n          type=\"submit\"\n          disabled={isLoading}\n          className=\"btn btn-primary\"\n        >\n          {isLoading ? 'Generating...' : 'Generate Quiz'}\n        </button>\n      </form>\n      {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n    </div>\n  );\n}\n\nexport default QuizGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}