{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js\";\n// pages/QuizResult.js\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nconst QuizResult = ({\n  topic,\n  score,\n  quizID,\n  total,\n  attempts,\n  onTryAgain,\n  difficulty,\n  onShowExplanations,\n  navigate,\n  quizData,\n  userAnswers,\n  quizType\n}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n  const type = quizType;\n\n  // Create a static marker for this specific quiz result\n  const saveKey = `save_completed_${quizID}`;\n  const alreadySaved = useRef(sessionStorage.getItem(saveKey) === 'true');\n\n  // Single-shot save effect that runs only once during component lifecycle\n  useEffect(() => {\n    // Check if we've already saved during this session\n    if (alreadySaved.current) {\n      console.log(\"Already saved this quiz result during this session\");\n      return;\n    }\n\n    // Only proceed if we meet all requirements\n    if (!isLogin || !userID || !quizData.length) {\n      return;\n    }\n    const saveEverything = async () => {\n      console.log(\"Saving quiz result...\");\n      try {\n        // Step 1: Save explanations\n        const explanationResponse = await axios.post('https://localhost:3001/api/explanations/save', {\n          userID,\n          quizID,\n          topic,\n          explanationData: {\n            quizData,\n            userAnswers\n          }\n        });\n        const explanationID = explanationResponse.data.explanationID;\n        console.log(\"Explanation saved with ID:\", explanationID);\n\n        // Step 2: Save quiz results\n        const resultPayload = {\n          userID,\n          topic,\n          score,\n          total,\n          attempts,\n          difficulty,\n          quizID,\n          explanationID\n        };\n        const resultRes = await axios.post(\"https://localhost:3001/api/result/save-results\", resultPayload);\n        if (resultRes.status === 200) {\n          console.log(\"Saved results successfully\");\n          // Mark this quiz as saved for this session\n          sessionStorage.setItem(saveKey, 'true');\n          alreadySaved.current = true;\n        }\n      } catch (err) {\n        console.error(\"Failed to save quiz result or explanations:\", err);\n      }\n    };\n\n    // Run immediately but only once\n    saveEverything();\n\n    // Empty dependency array - this effect runs once after initial render\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-dark text-white\",\n    style: {\n      border: '1px solid #237ac3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Your Score: \", score, \" out of \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"You got \", Math.round(score / total * 100), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, isLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"You've attempted this quiz \", attempts, \" times. Would you like to see the explanations or try again?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info me-2\",\n    onClick: onShowExplanations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Show Explanations\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-2\",\n    onClick: onTryAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Try Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary me-2\",\n    onClick: () => navigate(`/quiz-generator/${type}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn me-2 btn-danger\",\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Exit\"))));\n};\nexport default QuizResult;","map":{"version":3,"names":["axios","React","useEffect","useRef","useState","QuizResult","topic","score","quizID","total","attempts","onTryAgain","difficulty","onShowExplanations","navigate","quizData","userAnswers","quizType","isLogin","localStorage","getItem","userID","type","saveKey","alreadySaved","sessionStorage","current","console","log","length","saveEverything","explanationResponse","post","explanationData","explanationID","data","resultPayload","resultRes","status","setItem","err","error","createElement","className","style","border","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","Fragment","onClick"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js"],"sourcesContent":["// pages/QuizResult.js\nimport axios from 'axios';\nimport React, {useEffect, useRef, useState} from 'react';\n\nconst QuizResult = ({topic, score, quizID, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate, quizData, userAnswers, quizType}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n  const type = quizType;\n  \n  // Create a static marker for this specific quiz result\n  const saveKey = `save_completed_${quizID}`;\n  const alreadySaved = useRef(sessionStorage.getItem(saveKey) === 'true');\n  \n  // Single-shot save effect that runs only once during component lifecycle\n  useEffect(() => {\n    // Check if we've already saved during this session\n    if (alreadySaved.current) {\n      console.log(\"Already saved this quiz result during this session\");\n      return;\n    }\n    \n    // Only proceed if we meet all requirements\n    if (!isLogin || !userID || !quizData.length) {\n      return;\n    }\n    \n    const saveEverything = async () => {\n      console.log(\"Saving quiz result...\");\n      \n      try {\n        // Step 1: Save explanations\n        const explanationResponse = await axios.post('https://localhost:3001/api/explanations/save', {\n          userID,\n          quizID,\n          topic,\n          explanationData: {\n            quizData,\n            userAnswers\n          }\n        });\n        \n        const explanationID = explanationResponse.data.explanationID;\n        console.log(\"Explanation saved with ID:\", explanationID);\n        \n        // Step 2: Save quiz results\n        const resultPayload = {\n          userID,\n          topic,\n          score,\n          total,\n          attempts,\n          difficulty,\n          quizID,\n          explanationID,\n        };\n        \n        const resultRes = await axios.post(\"https://localhost:3001/api/result/save-results\", resultPayload);\n        if (resultRes.status === 200) {\n          console.log(\"Saved results successfully\");\n          // Mark this quiz as saved for this session\n          sessionStorage.setItem(saveKey, 'true');\n          alreadySaved.current = true;\n        }\n      } catch (err) {\n        console.error(\"Failed to save quiz result or explanations:\", err);\n      }\n    };\n    \n    // Run immediately but only once\n    saveEverything();\n    \n    // Empty dependency array - this effect runs once after initial render\n  }, []); \n\n  \n    return (\n      <div className=\"card bg-dark text-white\" style={{ border: '1px solid #237ac3' }}>\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate(`/quiz-generator/${type}`)}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}