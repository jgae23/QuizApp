{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nconst QuizResult = ({\n  topic,\n  score,\n  total,\n  attempts,\n  onTryAgain,\n  difficulty,\n  onShowExplanations,\n  navigate\n}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n  const [hasSaved, setHasSaved] = useState(false);\n  const hasAttemptedSave = useRef(false);\n  useEffect(() => {\n    if (isLogin && !hasAttemptedSave.current) {\n      hasAttemptedSave.current = true;\n      SaveResults();\n    }\n  }, []);\n  const SaveResults = async () => {\n    try {\n      const payload = {\n        userID,\n        topic,\n        score,\n        total,\n        attempts,\n        difficulty\n      };\n      const res = await axios.post(\"https://localhost:3001/api/result/save-results\", payload);\n      if (res.status === 200) {\n        //alert(\"Quiz saved successfully!\");\n        setHasSaved(true);\n      }\n    } catch (err) {\n      console.error(\"Error saving quiz:\", err);\n      alert(\"Failed to save quiz.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-white border\",\n    style: {\n      backgroundColor: \"#1a1a1a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Your Score: \", score, \" out of \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"You got \", Math.round(score / total * 100), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, isLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"You've attempted this quiz \", attempts, \" times. Would you like to see the explanations or try again?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info me-2\",\n    onClick: onShowExplanations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, \"Show Explanations\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-2\",\n    onClick: onTryAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Try Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary me-2\",\n    onClick: () => navigate('/quiz-generator/ai'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn me-2 btn-danger\",\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Exit\"))));\n};\nexport default QuizResult;","map":{"version":3,"names":["axios","React","useState","useEffect","useRef","QuizResult","topic","score","total","attempts","onTryAgain","difficulty","onShowExplanations","navigate","isLogin","localStorage","getItem","userID","hasSaved","setHasSaved","hasAttemptedSave","current","SaveResults","payload","res","post","status","err","console","error","alert","createElement","className","style","backgroundColor","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","Fragment","onClick"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js"],"sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect, useRef} from 'react';\n\nconst QuizResult = ({topic, score, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n    const [hasSaved, setHasSaved] = useState(false);\n\n    const hasAttemptedSave = useRef(false);\n\n    useEffect(() => {\n    if (isLogin && !hasAttemptedSave.current) {\n        hasAttemptedSave.current = true;\n        SaveResults();\n    }\n    }, []);\n\n      \n\n    const SaveResults = async () => {\n\n        try {\n            const payload = {\n                userID, topic, score, total, attempts, difficulty,\n            };\n\n            const res = await axios.post(\"https://localhost:3001/api/result/save-results\", payload);\n            if(res.status === 200) {\n                //alert(\"Quiz saved successfully!\");\n                setHasSaved(true);\n            }\n\n        } catch (err) {\n          console.error(\"Error saving quiz:\", err);\n          alert(\"Failed to save quiz.\");\n        }\n    };\n\n    return (\n        <div className=\"card text-white border\" style={{backgroundColor: \"#1a1a1a\",}} >\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate('/quiz-generator/ai')}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}