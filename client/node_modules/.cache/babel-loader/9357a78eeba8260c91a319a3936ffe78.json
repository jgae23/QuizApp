{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/QuizGenerator.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nconst QuizGenerator = () => {\n  const {\n    type\n  } = useParams();\n  const quizType = type;\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const navigate = useNavigate();\n\n  // Debug: Log the quiz type when component loads\n  useEffect(() => {\n    console.log(\"QuizGenerator loaded with type:\", quizType);\n  }, [quizType]);\n  useEffect(() => {\n    const saveQuizAndNavigate = async () => {\n      if (quizData && quizData.length > 0) {\n        try {\n          // Create the quiz\n          const response = await axios.post('https://localhost:3001/api/quiz/create', {\n            title: topic\n          });\n          const quizID = response.data.quizID;\n          console.log(\"Quiz created ID: \", quizID);\n\n          // Save all questions\n          const savedQuestions = await axios.post('https://localhost:3001/api/quiz/save-questions', {\n            quizID,\n            title: topic,\n            questions: quizData,\n            difficulty\n          });\n          const questionID = savedQuestions.data.questionID;\n          console.log(\"Question ID: \", questionID);\n          navigate('/take-quiz', {\n            state: {\n              questions: quizData,\n              topic,\n              difficulty,\n              quizID\n            }\n          });\n        } catch (error) {\n          console.error(\"Failed to save quiz:\", error);\n          alert(\"There was an error saving the quiz. Please try again.\");\n        }\n      }\n    };\n    saveQuizAndNavigate();\n  }, [quizData, navigate, topic, difficulty]);\n  const handleGenerateQuiz = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    console.log(`Generating ${quizType} quiz with:`, {\n      topic,\n      numberOfQuestions,\n      difficulty\n    });\n    try {\n      let response;\n      if (quizType === 'ai') {\n        response = await axios.post(`https://localhost:3001/api/ai-quiz/generate`, {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n        console.log(\"AI quiz response:\", response.data);\n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n      } else if (quizType === 'trivia') {\n        //console.log(\"Making trivia quiz request to:\", `${API_BASE}/api/trivia`);\n        response = await axios.post(`https://localhost:3001/api/trivia-quiz/generate`, {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n        console.log(\"Trivia quiz response:\", response.data);\n        if (response.data && response.data.questions) {\n          // Handle HTML entities in the data\n          const decodeHTML = html => {\n            if (!html) return '';\n            const txt = document.createElement('textarea');\n            txt.innerHTML = html;\n            return txt.value;\n          };\n\n          // Normalize the questions to ensure they match the format expected by TakeQuiz\n          const normalizedQuestions = response.data.questions.map(q => ({\n            question: decodeHTML(q.question),\n            correctAnswer: decodeHTML(q.correctAnswer),\n            options: Array.isArray(q.options) ? q.options.map(decodeHTML) : [...(q.incorrectAnswers || []).map(decodeHTML), decodeHTML(q.correctAnswer)].sort(() => Math.random() - 0.5)\n          }));\n          console.log(\"Normalized trivia questions:\", normalizedQuestions);\n          setQuizData(normalizedQuestions);\n        } else {\n          setError('Failed to generate trivia questions.');\n        }\n      } else {\n        setError(`Unknown quiz type: ${quizType}`);\n      }\n    } catch (err) {\n      console.error('Error generating quiz:', err);\n      // Show more detailed error information\n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        setError(`Server error: ${err.response.status} - ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        console.error('Error request:', err.request);\n        setError('No response received from server. Please check your connection.');\n      } else {\n        console.error('Error message:', err.message);\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-white p-4 rounded-4\",\n    style: {\n      backgroundColor: \"#1a1a1a\",\n      maxWidth: \"500px\",\n      // Limit the maximum width\n      minHeight: \"50vh\",\n      // Reduce minimum height from 70vh\n      marginTop: \"4rem\",\n      marginBottom: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"#4da6ff\",\n      // Bright blue for attention\n      fontWeight: \"600\",\n      textShadow: \"0px 0px 10px rgba(77, 166, 255, 0.3)\" // Subtle glow effect\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Ready to Challenge Yourself?\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#cccccc\",\n      // Slightly lighter than white for contrast\n      fontSize: \"1.1rem\",\n      letterSpacing: \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Choose a topic, set your difficulty, and we'll generate questions just for you!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleGenerateQuiz,\n    className: \"p-3 rounded-lg m-4 shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"topic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"What do you want to get tested on?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"topic\",\n    value: topic,\n    onChange: e => setTopic(e.target.value),\n    placeholder: \"e.g., Artificial Intelligence\",\n    required: true,\n    className: \"form-control bg-black text-white border-bottom-0 border-white\",\n    style: {\n      boxShadow: 'none',\n      WebkitBoxShadow: '0 0 0 1000px black inset',\n      WebkitTextFillColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numQuestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, \"Number of Questions:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"numQuestions\",\n    value: numberOfQuestions,\n    onChange: e => setNumberOfQuestions(Number(e.target.value)),\n    className: \"form-control bg-black text-white border-bottom-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"10\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"difficulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, \"Difficulty Level:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"difficulty\",\n    value: difficulty,\n    onChange: e => setDifficulty(e.target.value),\n    className: \"form-control bg-black text-white border-bottom-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"easy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, \"Hard\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: \"btn btn-primary transition\",\n    style: {\n      transformOrigin: 'center'\n    },\n    onMouseOver: e => e.target.style.transform = 'scale(1.05)',\n    onMouseOut: e => e.target.style.transform = 'scale(1)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, isLoading ? 'Generating...' : 'Generate Quiz')), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, error)))));\n};\nexport default QuizGenerator;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","QuizGenerator","type","quizType","topic","setTopic","numberOfQuestions","setNumberOfQuestions","difficulty","setDifficulty","isLoading","setIsLoading","error","setError","quizData","setQuizData","navigate","console","log","saveQuizAndNavigate","length","response","post","title","quizID","data","savedQuestions","questions","questionID","state","alert","handleGenerateQuiz","e","preventDefault","success","decodeHTML","html","txt","document","createElement","innerHTML","value","normalizedQuestions","map","q","question","correctAnswer","options","Array","isArray","incorrectAnswers","sort","Math","random","err","status","request","message","className","style","backgroundColor","maxWidth","minHeight","marginTop","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","textShadow","fontSize","letterSpacing","onSubmit","htmlFor","id","onChange","target","placeholder","required","boxShadow","WebkitBoxShadow","WebkitTextFillColor","Number","disabled","transformOrigin","onMouseOver","transform","onMouseOut"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/pages/QuizGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst QuizGenerator = () => {\n  const { type } = useParams();\n  const quizType = type;\n\n  const [topic, setTopic] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const navigate = useNavigate();\n  \n  // Debug: Log the quiz type when component loads\n  useEffect(() => {\n    console.log(\"QuizGenerator loaded with type:\", quizType);\n  }, [quizType]);\n\n  useEffect(() => {\n    const saveQuizAndNavigate = async () => {\n      if (quizData && quizData.length > 0) {\n        try {\n          // Create the quiz\n          const response = await axios.post('https://localhost:3001/api/quiz/create', {\n            title: topic,\n          });\n\n          const quizID = response.data.quizID;\n          console.log(\"Quiz created ID: \", quizID);\n\n          // Save all questions\n          const savedQuestions = await axios.post('https://localhost:3001/api/quiz/save-questions', {\n            quizID,\n            title: topic,\n            questions: quizData,\n            difficulty\n          });\n          const questionID = savedQuestions.data.questionID;\n          console.log(\"Question ID: \", questionID);\n  \n          navigate('/take-quiz', {\n            state: {\n              questions: quizData,\n              topic,\n              difficulty,\n              quizID,\n            },\n          });\n        } catch (error) {\n          console.error(\"Failed to save quiz:\", error);\n          alert(\"There was an error saving the quiz. Please try again.\");\n        }\n      }\n    };\n\n    saveQuizAndNavigate();\n  }, [quizData, navigate, topic, difficulty]);\n\n  const handleGenerateQuiz = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    \n    console.log(`Generating ${quizType} quiz with:`, { topic, numberOfQuestions, difficulty });\n\n    try {\n      let response;\n\n      if (quizType === 'ai') {\n        response = await axios.post(`https://localhost:3001/api/ai-quiz/generate`, {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        console.log(\"AI quiz response:\", response.data);\n        \n        if (response.data.success) {\n          setQuizData(response.data.questions);\n        } else {\n          setError('Failed to generate quiz questions.');\n        }\n      } else if (quizType === 'trivia') {\n        //console.log(\"Making trivia quiz request to:\", `${API_BASE}/api/trivia`);\n        response = await axios.post(`https://localhost:3001/api/trivia-quiz/generate`, {\n          topic,\n          numberOfQuestions,\n          difficulty\n        });\n\n        console.log(\"Trivia quiz response:\", response.data);\n        \n        if (response.data && response.data.questions) {\n          // Handle HTML entities in the data\n          const decodeHTML = (html) => {\n            if (!html) return '';\n            const txt = document.createElement('textarea');\n            txt.innerHTML = html;\n            return txt.value;\n          };\n          \n          // Normalize the questions to ensure they match the format expected by TakeQuiz\n          const normalizedQuestions = response.data.questions.map(q => ({\n            question: decodeHTML(q.question),\n            correctAnswer: decodeHTML(q.correctAnswer),\n            options: Array.isArray(q.options) \n              ? q.options.map(decodeHTML) \n              : [...(q.incorrectAnswers || []).map(decodeHTML), decodeHTML(q.correctAnswer)].sort(() => Math.random() - 0.5)\n          }));\n          \n          console.log(\"Normalized trivia questions:\", normalizedQuestions);\n          setQuizData(normalizedQuestions);\n        } else {\n          setError('Failed to generate trivia questions.');\n        }\n      } else {\n        setError(`Unknown quiz type: ${quizType}`);\n      }\n    } catch (err) {\n      console.error('Error generating quiz:', err);\n      // Show more detailed error information\n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        setError(`Server error: ${err.response.status} - ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        console.error('Error request:', err.request);\n        setError('No response received from server. Please check your connection.');\n      } else {\n        console.error('Error message:', err.message);\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"container text-white p-4 rounded-4\"\n      style={{ \n        backgroundColor: \"#1a1a1a\", \n        maxWidth: \"500px\",  // Limit the maximum width\n        minHeight: \"50vh\",   // Reduce minimum height from 70vh\n        marginTop: \"4rem\",\n        marginBottom: \"3rem\"\n      }}\n    >\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12\">\n          <div className=\"text-center mb-4\">\n            <h2 style={{\n              color: \"#4da6ff\", // Bright blue for attention\n              fontWeight: \"600\",\n              textShadow: \"0px 0px 10px rgba(77, 166, 255, 0.3)\" // Subtle glow effect\n            }}>\n              Ready to Challenge Yourself?\n            </h2>\n            <p style={{\n              color: \"#cccccc\", // Slightly lighter than white for contrast\n              fontSize: \"1.1rem\",\n              letterSpacing: \"0.5px\"\n            }}>\n              Choose a topic, set your difficulty, and we'll generate questions just for you!\n            </p>\n          </div>\n            <div className=\"form-container bg-dark\">\n              <form onSubmit={handleGenerateQuiz} className=\"p-3 rounded-lg m-4 shadow-md\" >\n                <div className=\"form-group\">\n                  <label htmlFor=\"topic\">What do you want to get tested on?</label>\n                  <input\n                    type=\"text\"\n                    id=\"topic\"\n                    value={topic}\n                    onChange={(e) => setTopic(e.target.value)}\n                    placeholder=\"e.g., Artificial Intelligence\"\n                    required\n                    className=\"form-control bg-black text-white border-bottom-0 border-white\"\n                    style={{\n                      boxShadow: 'none',\n                      WebkitBoxShadow: '0 0 0 1000px black inset',\n                      WebkitTextFillColor: 'white',\n                    }}\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"numQuestions\">Number of Questions:</label>\n                  <select \n                    id=\"numQuestions\" \n                    value={numberOfQuestions}\n                    onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n                    className=\"form-control bg-black text-white border-bottom-0\"\n                  >\n                    <option value=\"3\">3</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"10\">10</option>\n                  </select>\n                </div>\n            \n                <div className=\"form-group\">\n                  <label htmlFor=\"difficulty\">Difficulty Level:</label>\n                  <select \n                    id=\"difficulty\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(e.target.value)}\n                    className=\"form-control bg-black text-white border-bottom-0\"\n                  >\n                    <option value=\"easy\">Easy</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hard\">Hard</option>\n                  </select>\n                </div>\n            \n                <button \n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"btn btn-primary transition\"\n                  style={{transformOrigin: 'center'}}\n                  onMouseOver={ (e) =>  e.target.style.transform = 'scale(1.05)'}\n                  onMouseOut={(e) =>  e.target.style.transform = 'scale(1)'}\n                >\n                  {isLoading ? 'Generating...' : 'Generate Quiz'}\n                </button>\n              </form>\n              {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}