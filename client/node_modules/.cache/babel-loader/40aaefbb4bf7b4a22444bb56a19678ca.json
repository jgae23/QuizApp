{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js\";\n// pages/QuizResult.js\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nconst QuizResult = ({\n  topic,\n  score,\n  quizID,\n  total,\n  attempts,\n  onTryAgain,\n  difficulty,\n  onShowExplanations,\n  navigate,\n  quizData,\n  userAnswers,\n  quizType\n}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n\n  //const [explanationID, setExplanationID] = useState(null);\n  //const [hasSaved, setHasSaved] = useState(false);\n  const type = quizType;\n  console.log(\"Quiz Type: \", type);\n  const hasSavedKey = `hasSaved_${quizID}`;\n  const [hasSaved, setHasSaved] = useState(() => localStorage.getItem(hasSavedKey) === 'true');\n  const hasAttemptedSave = useRef(false);\n  console.log(\"HAS SAVED: \", hasSaved);\n\n  //const hasSavedExplanations = useRef(false);\n\n  // Save explanations\n  useEffect(() => {\n    if (!isLogin || !userID || !quizData.length || hasSaved || hasAttemptedSave.current) {\n      return; // ❌ don't even define or call saveEverything if not needed\n    }\n    const saveEverything = async () => {\n      console.log(\"Saving quiz result...\");\n      hasAttemptedSave.current = true;\n      try {\n        // Step 1: Save explanations\n        const explanationResponse = await axios.post('https://localhost:3001/api/explanations/save', {\n          userID,\n          quizID,\n          topic,\n          explanationData: {\n            quizData,\n            userAnswers\n          }\n        });\n        const explanationID = explanationResponse.data.explanationID;\n        console.log(\"Explanation saved with ID:\", explanationID);\n\n        // Step 2: Save quiz results\n        const resultPayload = {\n          userID,\n          topic,\n          score,\n          total,\n          attempts,\n          difficulty,\n          quizID,\n          explanationID\n        };\n        const resultRes = await axios.post(\"https://localhost:3001/api/result/save-results\", resultPayload);\n        if (resultRes.status === 200) {\n          console.log(\"Saved results successfully\");\n          setHasSaved(true);\n          localStorage.setItem(hasSavedKey, 'true');\n        }\n      } catch (err) {\n        console.error(\"Failed to save quiz result or explanations:\", err);\n      }\n    };\n    if (!hasSavedKey) saveEverything(); // ✅ only call if absolutely needed\n  }, [isLogin, userID, quizData, userAnswers, attempts, difficulty, quizID, score, topic, total, hasSavedKey]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-dark text-white\",\n    style: {\n      border: '1px solid #237ac3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Your Score: \", score, \" out of \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"You got \", Math.round(score / total * 100), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, isLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"You've attempted this quiz \", attempts, \" times. Would you like to see the explanations or try again?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info me-2\",\n    onClick: onShowExplanations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Show Explanations\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-2\",\n    onClick: onTryAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Try Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary me-2\",\n    onClick: () => navigate(`/quiz-generator/${type}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn me-2 btn-danger\",\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Exit\"))));\n};\nexport default QuizResult;","map":{"version":3,"names":["axios","React","useEffect","useRef","useState","QuizResult","topic","score","quizID","total","attempts","onTryAgain","difficulty","onShowExplanations","navigate","quizData","userAnswers","quizType","isLogin","localStorage","getItem","userID","type","console","log","hasSavedKey","hasSaved","setHasSaved","hasAttemptedSave","length","current","saveEverything","explanationResponse","post","explanationData","explanationID","data","resultPayload","resultRes","status","setItem","err","error","createElement","className","style","border","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","Fragment","onClick"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js"],"sourcesContent":["// pages/QuizResult.js\nimport axios from 'axios';\nimport React, {useEffect, useRef, useState} from 'react';\n\nconst QuizResult = ({topic, score, quizID, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate, quizData, userAnswers, quizType}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n    \n    //const [explanationID, setExplanationID] = useState(null);\n    //const [hasSaved, setHasSaved] = useState(false);\n    const type = quizType;\n    console.log(\"Quiz Type: \", type);\n\n    const hasSavedKey = `hasSaved_${quizID}`;\n    const [hasSaved, setHasSaved] = useState(() => \n      localStorage.getItem(hasSavedKey) === 'true'\n    );\n    \n    const hasAttemptedSave = useRef(false);\n    console.log(\"HAS SAVED: \", hasSaved);\n\n    //const hasSavedExplanations = useRef(false);\n\n    // Save explanations\n    useEffect(() => {\n      if (!isLogin || !userID || !quizData.length || hasSaved || hasAttemptedSave.current) {\n          return; // ❌ don't even define or call saveEverything if not needed\n      }\n  \n      const saveEverything = async () => {\n          console.log(\"Saving quiz result...\");\n          hasAttemptedSave.current = true;\n  \n          try {\n              // Step 1: Save explanations\n              const explanationResponse = await axios.post('https://localhost:3001/api/explanations/save', {\n                  userID,\n                  quizID,\n                  topic,\n                  explanationData: {\n                      quizData,\n                      userAnswers\n                  }\n              });\n  \n              const explanationID = explanationResponse.data.explanationID;\n              console.log(\"Explanation saved with ID:\", explanationID);\n  \n              // Step 2: Save quiz results\n              const resultPayload = {\n                  userID,\n                  topic,\n                  score,\n                  total,\n                  attempts,\n                  difficulty,\n                  quizID,\n                  explanationID,\n              };\n  \n              const resultRes = await axios.post(\"https://localhost:3001/api/result/save-results\", resultPayload);\n              if (resultRes.status === 200) {\n                  console.log(\"Saved results successfully\");\n                  setHasSaved(true);\n                  localStorage.setItem(hasSavedKey, 'true');\n              }\n  \n          } catch (err) {\n              console.error(\"Failed to save quiz result or explanations:\", err);\n          }\n      };\n  \n      if(!hasSavedKey) saveEverything(); // ✅ only call if absolutely needed\n    }, [isLogin, userID, quizData, userAnswers, attempts, difficulty, quizID, score, topic, total, hasSavedKey]);\n  \n    return (\n      <div className=\"card bg-dark text-white\" style={{ border: '1px solid #237ac3' }}>\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate(`/quiz-generator/${type}`)}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}