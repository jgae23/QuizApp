{"ast":null,"code":"var _jsxFileName = \"/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js\";\nimport axios from 'axios';\nimport React, { useEffect, useRef } from 'react';\nconst QuizResult = ({\n  topic,\n  score,\n  total,\n  attempts,\n  onTryAgain,\n  difficulty,\n  onShowExplanations,\n  navigate\n}) => {\n  const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n  const userID = localStorage.getItem(\"userID\");\n  //const [hasSaved, setHasSaved] = useState(false);\n\n  const hasAttemptedSave = useRef(false);\n  useEffect(() => {\n    const saveResults = async () => {\n      try {\n        const payload = {\n          userID,\n          topic,\n          score,\n          total,\n          attempts,\n          difficulty\n        };\n        const res = await axios.post(\"https://localhost:3001/api/result/save-results\", payload);\n        if (res.status === 200) {\n          // Successfully saved\n        }\n      } catch (err) {\n        console.error(\"Error saving quiz:\", err);\n        alert(\"Failed to save quiz.\");\n      }\n    };\n    if (isLogin && !hasAttemptedSave.current) {\n      hasAttemptedSave.current = true;\n      saveResults();\n    }\n  }, [isLogin, userID, topic, score, total, attempts, difficulty]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-white border\",\n    style: {\n      backgroundColor: \"#1a1a1a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Your Score: \", score, \" out of \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"You got \", Math.round(score / total * 100), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, isLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"You've attempted this quiz \", attempts, \" times. Would you like to see the explanations or try again?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info me-2\",\n    onClick: onShowExplanations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Show Explanations\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-2\",\n    onClick: onTryAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Try Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary me-2\",\n    onClick: () => navigate('/quiz-generator/ai'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn me-2 btn-danger\",\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Exit\"))));\n};\nexport default QuizResult;","map":{"version":3,"names":["axios","React","useEffect","useRef","QuizResult","topic","score","total","attempts","onTryAgain","difficulty","onShowExplanations","navigate","isLogin","localStorage","getItem","userID","hasAttemptedSave","saveResults","payload","res","post","status","err","console","error","alert","current","createElement","className","style","backgroundColor","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","Fragment","onClick"],"sources":["/Users/jgaethan/Documents/SPRING-2025/Introduction-Software-Engineering/Quiz-App/SENG2513/client/src/components/QuizResult.js"],"sourcesContent":["import axios from 'axios';\nimport React, {useEffect, useRef} from 'react';\n\nconst QuizResult = ({topic, score, total, attempts, onTryAgain, difficulty, onShowExplanations, navigate}) => {\n    const isLogin = localStorage.getItem(\"isLogin\") === \"true\";\n    const userID = localStorage.getItem(\"userID\");\n    //const [hasSaved, setHasSaved] = useState(false);\n\n    const hasAttemptedSave = useRef(false);\n\n    useEffect(() => {\n        const saveResults = async () => {\n          try {\n            const payload = {\n              userID, topic, score, total, attempts, difficulty,\n            };\n      \n            const res = await axios.post(\"https://localhost:3001/api/result/save-results\", payload);\n            if (res.status === 200) {\n              // Successfully saved\n            }\n          } catch (err) {\n            console.error(\"Error saving quiz:\", err);\n            alert(\"Failed to save quiz.\");\n          }\n        };\n      \n        if (isLogin && !hasAttemptedSave.current) {\n          hasAttemptedSave.current = true;\n          saveResults();\n        }\n    }, [isLogin, userID, topic, score, total, attempts, difficulty]);\n      \n\n    return (\n        <div className=\"card text-white border\" style={{backgroundColor: \"#1a1a1a\",}} >\n            <div className=\"card-body text-center\">\n                <h2>Quiz Results</h2>\n                <h3>Your Score: {score} out of {total}</h3>\n                <p>You got {Math.round((score / total) * 100)}%</p>\n            \n            \n                <div className=\"mt-4\">\n                    {isLogin && \n                        <>\n                            <p>You've attempted this quiz {attempts} times. Would you like to see the explanations or try again?</p>\n                            <button className=\"btn btn-info me-2\" onClick={onShowExplanations}>\n                                Show Explanations\n                            </button>\n                        </>\n                    }\n                    <button className=\"btn btn-primary me-2\" onClick={onTryAgain}>\n                        Try Again\n                    </button>\n                    <button className=\"btn btn-secondary me-2\" onClick={() => navigate('/quiz-generator/ai')}>\n                        New Quiz\n                    </button>\n                    <button className=\"btn me-2 btn-danger\" onClick={() => navigate('/')}>\n                        Exit\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}